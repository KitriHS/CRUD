{"ast":null,"code":"import _classCallCheck from \"/Users/kitrihapsari/Documents/React/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kitrihapsari/Documents/React/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kitrihapsari/Documents/React/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kitrihapsari/Documents/React/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kitrihapsari/Documents/React/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kitrihapsari/Documents/React/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/setting/Component.js\";\nimport React from \"react\";\nimport { Row, Button, Col } from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport SubHeader from \"../../component/sub-header\";\nimport ImageUploader from \"react-images-upload\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport TypeBanner from \"../dashboard/component/dropdown\";\nimport Loading from '../../component/Loading/index';\nimport Button2 from './../../component/Button';\n\nvar Setting =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Setting, _React$PureComponent);\n\n  function Setting(props) {\n    var _this;\n\n    _classCallCheck(this, Setting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Setting).call(this, props));\n\n    _this.onDrop = function (picture) {\n      if (picture.length > 0) {\n        var dataImage = new FileReader();\n\n        dataImage.onload = function (result) {\n          var image = result.target.result;\n\n          _this.setState({\n            image: image\n          });\n\n          _this.setState({\n            banner: picture,\n            errorMessage: ''\n          });\n        };\n\n        dataImage.readAsDataURL(picture[0]);\n      } else {\n        _this.setState({\n          errorMessage: \"Invalid Extentions\"\n        });\n      }\n    };\n\n    _this.state = {\n      modalOrder: false,\n      image: '',\n      banner: null,\n      search: \"\",\n      type: '',\n      uploadDate: moment(),\n      uploadDateValue: moment().format(\"YYYY-MM-DD\"),\n      endDate: moment().add(1, \"days\"),\n      endDateValue: \"\"\n    };\n    _this.toggleOrder = _this.toggleOrder.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.actionCol = _this.actionCol.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateStart = _this.handleDateStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateEnd = _this.handleDateEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Setting, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadDataListBanner();\n    }\n  }, {\n    key: \"loadDataListBanner\",\n    value: function loadDataListBanner() {\n      var dispatch = this.props.dispatch;\n      var bannerAction = this.props.actions.bannerAction;\n      var token = !this.props.login.token ? '' : this.props.login.token;\n      bannerAction(dispatch, token);\n    }\n  }, {\n    key: \"handleCallbackDeleteBanner\",\n    value: function handleCallbackDeleteBanner(callback) {\n      if (callback.success) {\n        this.loadDataListBanner();\n        this.setState({\n          errorMessage: ''\n        });\n      } else {\n        var errorMessage = callback.message ? callback.message : \"Failed Delete Banner\";\n        this.setState({\n          errorMessage: errorMessage\n        });\n      }\n    }\n  }, {\n    key: \"handleDeleteListBanner\",\n    value: function handleDeleteListBanner(row) {\n      var dispatch = this.props.dispatch;\n      var params = {\n        id: row._id\n      };\n      var deleteBannerAction = this.props.actions.deleteBannerAction;\n      var token = !this.props.login.token ? '' : this.props.login.token;\n      deleteBannerAction(dispatch, params, token, this.handleCallbackDeleteBanner.bind(this));\n    }\n  }, {\n    key: \"toggleOrder\",\n    value: function toggleOrder() {\n      this.setState({\n        modalOrder: !this.state.modalOrder\n      });\n    }\n  }, {\n    key: \"actionCol\",\n    value: function actionCol(id, row) {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: function onClick() {\n          return _this2.handleDeleteListBanner(row);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"DELETE\"));\n    }\n  }, {\n    key: \"handleDateStart\",\n    value: function handleDateStart(date) {\n      var uploadDate = moment(date).format(\"YYYY-MM-DD\");\n      var endDate = moment(uploadDate).add(1, \"days\");\n      var endDateFormat = moment(endDate).format(\"YYYY-MM-DD\");\n      this.setState({\n        uploadDate: date,\n        uploadDateValue: uploadDate,\n        endDate: endDate,\n        endDateValue: this.state.isRoundTrip ? endDateFormat : \"\"\n      });\n    }\n  }, {\n    key: \"handleDateEnd\",\n    value: function handleDateEnd(date) {\n      var endDateFormat = moment(date).format(\"YYYY-MM-DD\");\n      this.setState({\n        endDate: date,\n        endDateValue: endDateFormat\n      });\n    }\n  }, {\n    key: \"handleRemoveImage\",\n    value: function handleRemoveImage() {\n      this.setState({\n        image: '',\n        banner: null,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"handleCallbackUploadBanner\",\n    value: function handleCallbackUploadBanner(callback) {\n      if (callback.success) {\n        this.loadDataListBanner();\n        this.setState({\n          errorMessage: '',\n          image: '',\n          banner: null,\n          search: \"\",\n          type: '',\n          uploadDate: moment(),\n          uploadDateValue: moment().format(\"YYYY-MM-DD\"),\n          endDate: moment().add(1, \"days\"),\n          endDateValue: \"\"\n        });\n      } else {\n        var errorMessage = callback.message ? callback.message : \"Failed Upload Banner\";\n        this.setState({\n          errorMessage: errorMessage\n        });\n      }\n    }\n  }, {\n    key: \"handleUploadImage\",\n    value: function handleUploadImage() {\n      var dispatch = this.props.dispatch;\n      var postUploadImage = this.props.actions.postUploadImage;\n      var payload = {\n        image: !this.state.image ? null : this.state.image,\n        upload_date: !this.state.uploadDate ? null : moment(this.state.uploadDate).format(\"YYYY-MM-DD\"),\n        expired_date: !this.state.endDate ? null : moment(this.state.endDate).format(\"YYYY-MM-DD\"),\n        type: !this.state.type ? '' : this.state.type\n      };\n      var errorMessage = '';\n      var continueUpload = true;\n\n      if (payload.image == null) {\n        continueUpload = false;\n        errorMessage = \"Image can't be Empty\";\n        this.setState({\n          errorMessage: errorMessage\n        });\n      } else if (payload.type == '') {\n        continueUpload = false;\n        errorMessage = \"Type can'not be Empty\";\n        this.setState({\n          errorMessage: errorMessage\n        });\n      }\n\n      if (continueUpload) {\n        postUploadImage(dispatch, payload, this.handleCallbackUploadBanner.bind(this));\n      }\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(selected) {\n      this.setState({\n        type: selected,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"renderErrorMessage\",\n    value: function renderErrorMessage() {\n      var errorMessage = this.state.errorMessage;\n      if (!errorMessage) return null;\n      return React.createElement(\"div\", {\n        className: \"box-error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"error-message-cust\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, errorMessage))));\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      return React.createElement(\"div\", {\n        className: \"box-loading\",\n        style: {\n          marginTop: 50,\n          marginBottom: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        type: \"PulseLoader\",\n        loading: true,\n        color: '#0290d2',\n        size: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var SearchBar = Search.SearchBar;\n      var columns = [{\n        dataField: \"id\",\n        text: \"NO\",\n        headerStyle: {\n          width: \"5%\"\n        }\n      }, {\n        dataField: \"img\",\n        text: \"IMAGE\",\n        headerStyle: {\n          width: \"45%\"\n        }\n      }, {\n        dataField: \"upload\",\n        text: \"UPLOAD DATE\",\n        headerStyle: {\n          width: \"15%\"\n        }\n      }, {\n        dataField: \"expiry\",\n        text: \"EXPIRY DATE\",\n        headerStyle: {\n          width: \"15%\"\n        }\n      }, {\n        dataField: \"type\",\n        text: \"TYPE\",\n        headerStyle: {\n          width: \"10%\"\n        }\n      }, {\n        dataField: \"action\",\n        text: \"ACTION\",\n        headerStyle: {\n          width: \"10%\"\n        },\n        formatter: this.actionCol\n      }];\n      var pageOptions = {\n        paginationSize: 10,\n        pageStartIndex: 1,\n        withFirstAndLast: false,\n        hideSizePerPage: true,\n        hidePageListOnlyOnePage: true\n      };\n\n      var _dataListBanner = this.props.setting.dataListBanner != null ? this.props.setting.dataListBanner : [];\n\n      var _this$props$setting = this.props.setting,\n          fetchingUploadImage = _this$props$setting.fetchingUploadImage,\n          fetchingListBanner = _this$props$setting.fetchingListBanner;\n      var _dataListBannerView = [];\n\n      if (_dataListBanner.length > 0) {\n        _dataListBanner.map(function (banner, i) {\n          _dataListBannerView.push({\n            _id: banner.id,\n            id: i + Number(1),\n            img: React.createElement(\"div\", {\n              style: {\n                height: 150,\n                width: 300,\n                padding: 20\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 227\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              style: {\n                height: '100%',\n                width: '100%'\n              },\n              alt: \"pic\",\n              src: banner.image,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228\n              },\n              __self: this\n            }), \" \"),\n            upload: moment(banner.createdAt).format('DD-MM-YYYY'),\n            expiry: moment(banner.expired_date).format('DD-MM-YYYY'),\n            type: banner.type\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"section-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"search-flight-heading\",\n        style: {\n          paddingBottom: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Setting\"), React.createElement(Row, {\n        className: \"step-form-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(SubHeader, {\n        title: \"Setting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          marginTop: 45,\n          marginBottom: 35,\n          marginLeft: 30,\n          marginRight: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, !this.state.image ? React.createElement(Col, {\n        size: 1.5,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          marginBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Upload Image\"), React.createElement(ImageUploader, {\n        label: \"\",\n        withIcon: false,\n        fileContainerStyle: {\n          backgroundColor: \"#ffffff\",\n          padding: 0,\n          borderRadius: 0,\n          height: 0\n        },\n        buttonClassName: \"image\",\n        onChange: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })) : React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-container-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-view-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image-view\",\n        src: this.state.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this3.handleRemoveImage();\n        },\n        className: \"box-image-exit pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"X\"))), React.createElement(Col, {\n        size: 2,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Upload Date\"), React.createElement(DatePicker, {\n        selected: this.state.uploadDate,\n        onChange: this.handleDateStart,\n        minDate: moment(),\n        style: {\n          padding: 20\n        },\n        placeholderText: \"DD/MM/YYYY\",\n        dateFormat: \"DD/MM/YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })), React.createElement(Col, {\n        size: 2,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Expiry Date\"), React.createElement(DatePicker, {\n        selected: this.state.endDate,\n        onChange: this.handleDateEnd,\n        minDate: this.state.uploadDate,\n        style: {\n          padding: 20\n        },\n        placeholderText: \"DD/MM/YYYY\",\n        dateFormat: \"DD/MM/YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })), React.createElement(Col, {\n        size: 1.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          paddingLeft: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Type\"), React.createElement(TypeBanner, {\n        handleSelect: this.handleSelect.bind(this),\n        typeBanner: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      })), React.createElement(Button2, {\n        handleSubmit: this.handleUploadImage.bind(this),\n        label: \"UPLOAD\",\n        loading: fetchingUploadImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, this.renderErrorMessage())), React.createElement(\"div\", {\n        className: \"form-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(ToolkitProvider, {\n        keyField: \"id\",\n        data: _dataListBannerView,\n        columns: columns,\n        search: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(\"div\", {\n          style: {\n            marginTop: 10,\n            marginBottom: 50\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(SearchBar, Object.assign({\n          className: \"custome-search-field\",\n          placeholder: \"Search In Here\"\n        }, props.searchProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }), fetchingListBanner ? _this3.renderLoading() : React.createElement(BootstrapTable, Object.assign({\n          pagination: paginationFactory(pageOptions),\n          striped: true\n        }, props.baseProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        })));\n      })))));\n    }\n  }]);\n\n  return Setting;\n}(React.PureComponent);\n\nexport { Setting as default };","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/setting/Component.js"],"names":["React","Row","Button","Col","BootstrapTable","paginationFactory","ToolkitProvider","Search","SubHeader","ImageUploader","DatePicker","moment","TypeBanner","Loading","Button2","Setting","props","onDrop","picture","length","dataImage","FileReader","onload","result","image","target","setState","banner","errorMessage","readAsDataURL","state","modalOrder","search","type","uploadDate","uploadDateValue","format","endDate","add","endDateValue","toggleOrder","bind","actionCol","handleDateStart","handleDateEnd","loadDataListBanner","dispatch","bannerAction","actions","token","login","callback","success","message","row","params","id","_id","deleteBannerAction","handleCallbackDeleteBanner","handleDeleteListBanner","date","endDateFormat","isRoundTrip","postUploadImage","payload","upload_date","expired_date","continueUpload","handleCallbackUploadBanner","selected","marginTop","marginBottom","SearchBar","columns","dataField","text","headerStyle","width","formatter","pageOptions","paginationSize","pageStartIndex","withFirstAndLast","hideSizePerPage","hidePageListOnlyOnePage","_dataListBanner","setting","dataListBanner","fetchingUploadImage","fetchingListBanner","_dataListBannerView","map","i","push","Number","img","height","padding","upload","createdAt","expiry","paddingBottom","marginLeft","marginRight","textAlign","backgroundColor","borderRadius","handleRemoveImage","paddingLeft","handleSelect","handleUploadImage","renderErrorMessage","searchProps","renderLoading","baseProps","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Button, Col } from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport SubHeader from \"../../component/sub-header\";\nimport ImageUploader from \"react-images-upload\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport TypeBanner from \"../dashboard/component/dropdown\";\nimport Loading from '../../component/Loading/index';\n\nimport Button2 from './../../component/Button';\n\n\nexport default class Setting extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOrder: false,\n      image:'',\n      banner:null,\n      search: \"\",\n      type:'',\n      uploadDate: moment(),\n      uploadDateValue: moment().format(\"YYYY-MM-DD\"),\n      endDate: moment().add(1, \"days\"),\n      endDateValue: \"\"\n    };\n    this.toggleOrder = this.toggleOrder.bind(this);\n    this.actionCol = this.actionCol.bind(this);\n    this.handleDateStart = this.handleDateStart.bind(this);\n    this.handleDateEnd = this.handleDateEnd.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n  componentWillMount(){\n    this.loadDataListBanner();\n  }\n\n  loadDataListBanner(){\n    const { dispatch }     = this.props;\n    const { bannerAction } = this.props.actions;\n    let token = !this.props.login.token ? '' : this.props.login.token;\n    bannerAction(dispatch, token);\n  }\n  handleCallbackDeleteBanner(callback){\n    if(callback.success){\n      this.loadDataListBanner();\n      this.setState({ errorMessage:'' });\n    }else {\n      let errorMessage   = callback.message ? callback.message : \"Failed Delete Banner\";\n      this.setState({errorMessage});\n    }\n  }\n  handleDeleteListBanner(row){\n    const { dispatch }     = this.props;\n    let params = {\n      id: row._id\n     }\n    const { deleteBannerAction } = this.props.actions;\n    let token = !this.props.login.token ? '' : this.props.login.token;\n    deleteBannerAction(dispatch, params, token, this.handleCallbackDeleteBanner.bind(this));\n  }\n\n  toggleOrder() {\n    this.setState({ modalOrder: !this.state.modalOrder });\n  }\n  actionCol(id, row) {\n    return (\n      <div>\n        <Button color=\"danger\" onClick={()=> this.handleDeleteListBanner(row)}>DELETE</Button>\n      </div>\n    );\n  }\n  handleDateStart(date) {\n    let uploadDate = moment(date).format(\"YYYY-MM-DD\");\n    let endDate = moment(uploadDate).add(1, \"days\");\n    let endDateFormat = moment(endDate).format(\"YYYY-MM-DD\");\n    this.setState({\n      uploadDate: date,\n      uploadDateValue: uploadDate,\n      endDate: endDate,\n      endDateValue: this.state.isRoundTrip ? endDateFormat : \"\"\n    });\n  }\n  handleDateEnd(date) {\n    let endDateFormat = moment(date).format(\"YYYY-MM-DD\");\n    this.setState({\n      endDate: date,\n      endDateValue: endDateFormat\n    });\n  }\n  onDrop = picture => {\n    if (picture.length > 0){\n      let dataImage = new FileReader();\n      dataImage.onload=((result) => {\n        let image = result.target.result;\n        this.setState({ image:image });\n        this.setState({ banner:picture, errorMessage:'' });\n      });\n      dataImage.readAsDataURL(picture[0]);\n    }else {\n      this.setState({ errorMessage:\"Invalid Extentions\" });\n    }\n  };\n\n  handleRemoveImage(){\n    this.setState({ image:'', banner:null, errorMessage:'' });\n  }\n\n  handleCallbackUploadBanner(callback){\n    if(callback.success){\n      this.loadDataListBanner();\n      this.setState({ \n        errorMessage:'',\n        image:'',\n        banner:null,\n        search: \"\",\n        type:'',\n        uploadDate: moment(),\n        uploadDateValue: moment().format(\"YYYY-MM-DD\"),\n        endDate: moment().add(1, \"days\"),\n        endDateValue: \"\"\n      });\n    }else {\n      let errorMessage   = callback.message ? callback.message : \"Failed Upload Banner\";\n      this.setState({errorMessage});\n    }\n  }\n\n  handleUploadImage(){\n    const { dispatch } = this.props;\n    const { postUploadImage } = this.props.actions;\n    let payload  = {\n      image:!this.state.image ? null : this.state.image,\n      upload_date:!this.state.uploadDate ? null : moment(this.state.uploadDate).format(\"YYYY-MM-DD\"),\n      expired_date:!this.state.endDate ? null : moment(this.state.endDate).format(\"YYYY-MM-DD\"),\n      type:!this.state.type ? '' :  this.state.type\n    }\n    let errorMessage   = '';\n    let continueUpload = true;\n    if (payload.image==null){\n      continueUpload = false;\n      errorMessage   = \"Image can't be Empty\";\n      this.setState({errorMessage});\n    }else if (payload.type==''){\n      continueUpload = false;\n      errorMessage = \"Type can'not be Empty\";\n      this.setState({errorMessage});\n    }\n\n    if (continueUpload){\n      postUploadImage(dispatch, payload, this.handleCallbackUploadBanner.bind(this));\n    }\n  }\n  handleSelect(selected){\n    this.setState({ type:selected, errorMessage:'' });\n  }\n  renderErrorMessage(){\n    const { errorMessage } = this.state;\n    if (!errorMessage) return null;\n    return (\n      <div className=\"box-error-message\">\n      <Row>\n        <Col>\n          <div className=\"error-message-cust\">{errorMessage}</div>\n        </Col>\n      </Row>\n      </div>\n    );\n  }\n\n  renderLoading(){\n    return(\n      <div className=\"box-loading\" style={{marginTop: 50, marginBottom:50}}>\n        <Loading\n          type=\"PulseLoader\"\n          loading={true}\n          color={'#0290d2'}\n          size={25}\n        />\n      </div>\n    )\n  }\n  \n  render() {\n    const { SearchBar } = Search;\n    const columns = [\n      { dataField: \"id\", text: \"NO\", headerStyle: { width: \"5%\" } },\n      { dataField: \"img\", text: \"IMAGE\", headerStyle: { width: \"45%\" } },\n      {\n        dataField: \"upload\",\n        text: \"UPLOAD DATE\",\n        headerStyle: { width: \"15%\" }\n      },\n      {\n        dataField: \"expiry\",\n        text: \"EXPIRY DATE\",\n        headerStyle: { width: \"15%\" }\n      },\n      { dataField: \"type\", text: \"TYPE\", headerStyle: { width: \"10%\" } },\n      {\n        dataField: \"action\",\n        text: \"ACTION\",\n        headerStyle: { width: \"10%\" },\n        formatter: this.actionCol\n      }\n    ];\n    const pageOptions = {\n      paginationSize: 10,\n      pageStartIndex: 1,\n      withFirstAndLast: false,\n      hideSizePerPage: true,\n      hidePageListOnlyOnePage: true\n    };\n    let _dataListBanner =  this.props.setting.dataListBanner!=null ? this.props.setting.dataListBanner : [];\n    const { fetchingUploadImage, fetchingListBanner } = this.props.setting;\n    let _dataListBannerView = [];\n    if (_dataListBanner.length > 0){\n      _dataListBanner.map((banner, i)=>{\n        _dataListBannerView.push(\n          {\n            _id:banner.id,\n            id: i+Number(1),\n            img: (\n              <div style={{ height: 150, width: 300, padding:20 }}>\n                <img\n                  style={{ height: '100%', width: '100%' }}\n                  alt=\"pic\"\n                  src={banner.image}\n                />{\" \"}\n              </div>\n            ),\n            upload: moment(banner.createdAt).format('DD-MM-YYYY'),\n            expiry: moment(banner.expired_date).format('DD-MM-YYYY'),\n            type: banner.type\n          }\n        )\n      })\n    }\n\n    return (\n      <div className=\"section-search\">\n        <Row\n          className=\"search-flight-heading\"\n          style={{ paddingBottom: \"40px\" }}\n        >\n          Setting\n        </Row>\n        <Row className=\"step-form-table\">\n          <div style={{ width: \"100%\" }}>\n            <SubHeader title={\"Setting\"} />\n            <div\n              style={{\n                marginTop: 45,\n                marginBottom: 35,\n                marginLeft: 30,\n                marginRight: 30\n              }}\n            >\n              <Row>\n                {!this.state.image ? \n                  <Col size={1.5} style={{ textAlign: \"center\" }}>\n                    <p style={{ marginBottom: 30 }}>Upload Image</p>\n                    <ImageUploader\n                      label=\"\"\n                      withIcon={false}\n                      fileContainerStyle={{\n                        backgroundColor: \"#ffffff\",\n                        padding: 0,\n                        borderRadius: 0,\n                        height: 0\n                      }}\n                      buttonClassName=\"image\"\n                      onChange={this.onDrop}\n                    />\n                  </Col> \n                  :\n                  <Col>\n                    <div className=\"box-container-image\">\n                      <div className=\"box-view-image\">\n                        <img  className=\"image-view\" src={this.state.image} />\n                      </div>\n                      <div onClick={()=>this.handleRemoveImage()} className=\"box-image-exit pointer\">\n                        X\n                      </div>\n                    </div>\n                  </Col>\n                }\n                <Col size={2} style={{ textAlign: \"center\" }}>\n                  <p>Upload Date</p>\n                  <DatePicker\n                    selected={this.state.uploadDate}\n                    onChange={this.handleDateStart}\n                    minDate={moment()}\n                    style={{ padding: 20 }}\n                    placeholderText=\"DD/MM/YYYY\"\n                    dateFormat=\"DD/MM/YYYY\"\n                  />\n                </Col>\n                <Col size={2} style={{ textAlign: \"center\" }}>\n                  <p>Expiry Date</p>\n                  <DatePicker\n                    selected={this.state.endDate}\n                    onChange={this.handleDateEnd}\n                    minDate={this.state.uploadDate}\n                    style={{ padding: 20 }}\n                    placeholderText=\"DD/MM/YYYY\"\n                    dateFormat=\"DD/MM/YYYY\"\n                  />\n                </Col>\n                <Col size={1.5}>\n                  <p style={{ paddingLeft: 50 }}>Type</p>\n                  <TypeBanner handleSelect={this.handleSelect.bind(this)} typeBanner={true} />\n                </Col>\n                <Button2 \n                  handleSubmit={this.handleUploadImage.bind(this)}\n                  label=\"UPLOAD\"\n                  loading={fetchingUploadImage}\n                />\n                {/* <Col size={3}>\n                  <p style={{ marginTop: 36 }} />\n                  <div \n                    className=\"button-primary\"\n                    style={{ alignItems: \"right\", width: 250, height: 40, borderRadius:5,\n                      display:'flex', \n                      flexDirection:'row',\n                      alignItems:'center',\n                      justifyContent:'center'\n                      \n                    }}\n                  >\n                    <Loading\n                      type=\"PulseLoader\"\n                      loading={true}\n                      color={'#fff'}\n                      size={15}\n                    />\n                  </div>\n                  \n                  <Button\n                    onClick={()=>this.handleUploadImage()}\n                    className=\"button-primary\"\n                    style={{ alignItems: \"right\", width: 250, height: 40 }}\n                  >\n                    <b>UPLOAD</b>\n                  </Button>\n                </Col> */}\n              </Row>\n              <Row>\n                {this.renderErrorMessage()}\n              </Row>\n            </div>\n            <div className=\"form-search\">\n              <ToolkitProvider\n                keyField=\"id\"\n                data={_dataListBannerView}\n                columns={columns}\n                search\n              >\n                {props => (\n                  <div style={{ marginTop: 10, marginBottom: 50 }}>\n                    <SearchBar\n                      className=\"custome-search-field\"\n                      placeholder=\"Search In Here\"\n                      {...props.searchProps}\n                    />\n                    <hr />\n                    {fetchingListBanner ? \n                      this.renderLoading()\n                      :\n                      <BootstrapTable\n                        pagination={paginationFactory(pageOptions)}\n                        striped\n                        {...props.baseProps}\n                      />\n                    }\n                  </div>\n                )}\n              </ToolkitProvider>\n              {/* <Modal isOpen={this.state.modalOrder} togglePrimary={this.toggleOrder} className={'modal-primary ' + this.props.className}>\n                <ModalHeader style={{background: SECOND_COLOR, color: '#ffffff'}} toggle={this.toggleOrder}>Details Order</ModalHeader>\n                <ModalBody style={{marginTop: 0, marginBottom:0, paddingTop: 0, paddingBottom: 0}}>\n                  <Row className=\"show-tab\">\n                    <Tabs>\n                      <InfoPassenger title=\"Pessanger Information\" />\n                      <ContactDetail title=\"Contact Details\" />\n                    </Tabs>\n                  </Row>\n                </ModalBody>   \n              </Modal> */}\n            </div>\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}