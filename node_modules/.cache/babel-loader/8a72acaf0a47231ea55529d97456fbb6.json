{"ast":null,"code":"import { API_ALL_CONTACT, API_URL, POST_LOGIN, GET_GROUP_ROLE, GET_USER, POST_REGISTER } from \"../config/constant\";\nexport function servicesSearchFlight(origin, destination, departureDate, returnDate, adults, child, infant) {\n  var Body = JSON.stringify({\n    origin: origin,\n    destination: destination,\n    departureDate: departureDate,\n    adults: adults,\n    children: child,\n    infants: infant\n  });\n\n  if (returnDate !== \"\") {\n    Body = JSON.stringify({\n      origin: origin,\n      destination: destination,\n      departureDate: departureDate,\n      returnDate: returnDate,\n      adults: adults,\n      children: child,\n      infants: infant\n    });\n  }\n\n  var headers = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: Body\n  };\n  return fetch(API_URL + \"flight/search\", headers).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  return response.text().then(function (text) {\n    var data = text && JSON.parse(text);\n\n    if (!response.ok) {// if (response.status === 401) {\n      //     // auto logout if 401 response returned from api\n      //     logout();\n      //     location.reload(true);\n      // }\n      // const error = (data && data.message) || response.statusText;\n      // return Promise.reject(error);\n    }\n\n    return data;\n  });\n} //2. GROUP ROLE \n\n\nexport function servicesGroupRole(params) {\n  var headers = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n  return fetch(API_URL + GET_GROUP_ROLE + \"?q=\".concat(params.q, \"&page=\").concat(params.page, \"&limit=\").concat(params.limit), headers).then(handleResponse);\n} //4. REGISTER\n\nexport function servicesRegister(data) {\n  var headers = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      'x-platform-source': 'CMS_ASITA',\n      'x-sai-source': 'ASITAAJA'\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(API_URL + POST_REGISTER, headers).then(handleResponse);\n} //5. LOGIN\n\nexport function servicesLogin(data) {\n  var headers = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(API_URL + POST_LOGIN, headers).then(handleResponse);\n} //6. GET USERS\n\nexport function servicesUser(params) {\n  var headers = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      'x-platform-source': 'CMS_ASITA',\n      'x-sai-source': 'ASITAAJA'\n    }\n  };\n  return fetch(API_ALL_CONTACT + \"?q=\".concat(params.q, \"&page=\").concat(params.page, \"&limit=\").concat(params.limit), headers).then(handleResponse);\n} //14. UPDATE USER\n\nexport function editUser(id, data) {\n  var headers = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      'x-platform-source': 'CMS_ASITA',\n      'x-sai-source': 'ASITAAJA'\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(API_URL + GET_USER + '/' + id, headers).then(handleResponse);\n} //16. DELETE USER CMS\n\nexport function deleteUser(id, token) {\n  var headers = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token),\n      'x-platform-source': 'CMS_ASITA',\n      'x-sai-source': 'ASITAAJA'\n    }\n  };\n  return fetch(API_URL + GET_USER + '/' + id, headers).then(handleResponse);\n}","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/projects/cmsasitaaja/src/services/webServices.js"],"names":["API_ALL_CONTACT","API_URL","POST_LOGIN","GET_GROUP_ROLE","GET_USER","POST_REGISTER","servicesSearchFlight","origin","destination","departureDate","returnDate","adults","child","infant","Body","JSON","stringify","children","infants","headers","method","Accept","body","fetch","then","handleResponse","response","text","data","parse","ok","servicesGroupRole","params","q","page","limit","servicesRegister","servicesLogin","servicesUser","editUser","id","deleteUser","token","Authorization"],"mappings":"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","sourcesContent":["import { API_ALL_CONTACT, API_URL, POST_LOGIN, GET_GROUP_ROLE, GET_USER,POST_REGISTER } from \"../config/constant\";\n\n\nexport function servicesSearchFlight(\n  origin,\n  destination,\n  departureDate,\n  returnDate,\n  adults,\n  child,\n  infant\n) {\n  let Body = JSON.stringify({\n    origin: origin,\n    destination: destination,\n    departureDate: departureDate,\n    adults: adults,\n    children: child,\n    infants: infant\n  });\n  if (returnDate !== \"\") {\n    Body = JSON.stringify({\n      origin: origin,\n      destination: destination,\n      departureDate: departureDate,\n      returnDate: returnDate,\n      adults: adults,\n      children: child,\n      infants: infant\n    });\n  }\n  const headers = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: Body\n  };\n\n  return fetch(API_URL + \"flight/search\", headers).then(handleResponse);\n}\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      // if (response.status === 401) {\n      //     // auto logout if 401 response returned from api\n      //     logout();\n      //     location.reload(true);\n      // }\n      // const error = (data && data.message) || response.statusText;\n      // return Promise.reject(error);\n    }\n    return data;\n  });\n}\n\n//2. GROUP ROLE \nexport function servicesGroupRole(params) {\n  const headers = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  };\n\n  return fetch(API_URL + GET_GROUP_ROLE + `?q=${params.q}&page=${params.page}&limit=${params.limit}`, headers).then(handleResponse);\n}\n\n//4. REGISTER\nexport function servicesRegister(data) {\n  const headers = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      'x-platform-source': 'CMS_ASITA',\n      'x-sai-source': 'ASITAAJA',\n    },\n    body: JSON.stringify(data)\n  };\n\n  return fetch(API_URL + POST_REGISTER, headers).then(handleResponse);\n}\n\n//5. LOGIN\nexport function servicesLogin(data) {\n  const headers = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify(data)\n  };\n\n  return fetch(API_URL + POST_LOGIN, headers).then(handleResponse);\n}\n\n//6. GET USERS\nexport function servicesUser(params) {\n  const headers = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      'x-platform-source': 'CMS_ASITA',\n      'x-sai-source': 'ASITAAJA',\n    }\n  }\n  return fetch(API_ALL_CONTACT + `?q=${params.q}&page=${params.page}&limit=${params.limit}`, headers).then(handleResponse);\n}\n\n\n//14. UPDATE USER\nexport function editUser(id, data) {\n  const headers = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      'x-platform-source': 'CMS_ASITA',\n      'x-sai-source': 'ASITAAJA',\n    },\n    body: JSON.stringify(data)\n  }\n  return fetch(API_URL + GET_USER + '/' + id, headers).then(handleResponse);\n}\n\n//16. DELETE USER CMS\nexport function deleteUser(id, token) {\n  const headers = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`,\n      'x-platform-source': 'CMS_ASITA',\n      'x-sai-source': 'ASITAAJA',\n    }\n  }\n  return fetch(API_URL + GET_USER + '/' + id, headers).then(handleResponse);\n}\n"]},"metadata":{},"sourceType":"module"}