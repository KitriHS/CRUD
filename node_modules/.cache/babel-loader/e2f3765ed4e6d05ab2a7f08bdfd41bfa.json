{"ast":null,"code":"import { servicePackageTours, serviceStatusTour } from '../../services/webServices.js';\nimport { RESET_PACKAGE_TOUR, GET_PACKAGE_TOUR, PACKAGE_TOUR_SUCCESS, PACKAGE_TOUR_FAILED, POST_STATUS_TOUR, STATUS_TOUR_SUCCESS, STATUS_TOUR_FAILED } from '../../config/constant.js';\nexport function packageTourAction(dispact, params, token) {\n  dispact(doPackageTour());\n  return servicePackageTours(params, token).then(function (res) {\n    dispact(packageTourSuccess(res.data.items, res.meta));\n  }).catch(function (err) {\n    return dispact(packageTourlFailed(false));\n  });\n}\nexport function statusToursAction(dispact, id, data, callback) {\n  var _this = this;\n\n  dispact(updateStatus());\n  return serviceStatusTour(id, data).then(function (res) {\n    callback.call(_this, res);\n    dispact(statusToursSuccess(_this, res));\n  }).catch(function () {\n    return dispact(statusToursFailed(false));\n  });\n}\n\nfunction doPackageTour(payload) {\n  return {\n    type: GET_PACKAGE_TOUR,\n    data: payload\n  };\n}\n\nfunction packageTourSuccess(payload, meta) {\n  return {\n    type: PACKAGE_TOUR_SUCCESS,\n    data: payload\n  };\n}\n\nfunction packageTourlFailed() {\n  return {\n    type: PACKAGE_TOUR_FAILED\n  };\n}\n\nfunction updateStatus() {\n  return {\n    type: POST_STATUS_TOUR\n  };\n}\n\nfunction statusToursSuccess(payload, meta) {\n  return {\n    type: STATUS_TOUR_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction statusToursFailed() {\n  return {\n    type: STATUS_TOUR_FAILED\n  };\n} //RESET PACKAGE TOUR\n\n\nexport function resetPackageTour(dispact) {\n  dispact(resetPackageTourSuccess());\n}\n\nfunction resetPackageTourSuccess(payload) {\n  return {\n    type: RESET_PACKAGE_TOUR,\n    data: payload\n  };\n}","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/package-tour/Action.js"],"names":["servicePackageTours","serviceStatusTour","RESET_PACKAGE_TOUR","GET_PACKAGE_TOUR","PACKAGE_TOUR_SUCCESS","PACKAGE_TOUR_FAILED","POST_STATUS_TOUR","STATUS_TOUR_SUCCESS","STATUS_TOUR_FAILED","packageTourAction","dispact","params","token","doPackageTour","then","res","packageTourSuccess","data","items","meta","catch","err","packageTourlFailed","statusToursAction","id","callback","updateStatus","call","statusToursSuccess","statusToursFailed","payload","type","resetPackageTour","resetPackageTourSuccess"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,iBAA9B,QAAuD,+BAAvD;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,oBAA/C,EAAqEC,mBAArE,EAA0FC,gBAA1F,EAA4GC,mBAA5G,EAAiIC,kBAAjI,QAA2J,0BAA3J;AAEA,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,MAApC,EAA4CC,KAA5C,EAAmD;AACxDF,EAAAA,OAAO,CAACG,aAAa,EAAd,CAAP;AACA,SAAOb,mBAAmB,CAACW,MAAD,EAASC,KAAT,CAAnB,CACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACXL,IAAAA,OAAO,CAACM,kBAAkB,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,EAAiBH,GAAG,CAACI,IAArB,CAAnB,CAAP;AACD,GAHI,EAIJC,KAJI,CAIE,UAAAC,GAAG,EAAI;AACZ,WAAOX,OAAO,CAACY,kBAAkB,CAAC,KAAD,CAAnB,CAAd;AACD,GANI,CAAP;AAOD;AAED,OAAO,SAASC,iBAAT,CAA2Bb,OAA3B,EAAoCc,EAApC,EAAwCP,IAAxC,EAA8CQ,QAA9C,EAAwD;AAAA;;AAC7Df,EAAAA,OAAO,CAACgB,YAAY,EAAb,CAAP;AACA,SAAOzB,iBAAiB,CAACuB,EAAD,EAAKP,IAAL,CAAjB,CACJH,IADI,CACC,UAAAC,GAAG,EAAI;AACXU,IAAAA,QAAQ,CAACE,IAAT,CAAc,KAAd,EAAoBZ,GAApB;AACAL,IAAAA,OAAO,CAACkB,kBAAkB,CAAC,KAAD,EAAOb,GAAP,CAAnB,CAAP;AACD,GAJI,EAKJK,KALI,CAKE,YAAM;AACX,WAAOV,OAAO,CAACmB,iBAAiB,CAAC,KAAD,CAAlB,CAAd;AACD,GAPI,CAAP;AAQD;;AAED,SAAShB,aAAT,CAAuBiB,OAAvB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAE5B,gBADD;AAELc,IAAAA,IAAI,EAAEa;AAFD,GAAP;AAID;;AAED,SAASd,kBAAT,CAA4Bc,OAA5B,EAAqCX,IAArC,EAA2C;AACzC,SAAO;AACLY,IAAAA,IAAI,EAAE3B,oBADD;AAELa,IAAAA,IAAI,EAAEa;AAFD,GAAP;AAID;;AAED,SAASR,kBAAT,GAA8B;AAC5B,SAAO;AACLS,IAAAA,IAAI,EAAE1B;AADD,GAAP;AAGD;;AACD,SAASqB,YAAT,GAAwB;AACtB,SAAO;AACLK,IAAAA,IAAI,EAAEzB;AADD,GAAP;AAGD;;AACD,SAASsB,kBAAT,CAA4BE,OAA5B,EAAqCX,IAArC,EAA2C;AACzC,SAAO;AACLY,IAAAA,IAAI,EAAExB,mBADD;AAELU,IAAAA,IAAI,EAAEa,OAFD;AAGLX,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD;;AACD,SAASU,iBAAT,GAA6B;AAC3B,SAAO;AACLE,IAAAA,IAAI,EAAEvB;AADD,GAAP;AAGD,C,CAED;;;AACA,OAAO,SAASwB,gBAAT,CAA0BtB,OAA1B,EAAmC;AACxCA,EAAAA,OAAO,CAACuB,uBAAuB,EAAxB,CAAP;AACD;;AACD,SAASA,uBAAT,CAAiCH,OAAjC,EAA0C;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAE7B,kBADD;AAELe,IAAAA,IAAI,EAAEa;AAFD,GAAP;AAID","sourcesContent":["import { servicePackageTours, serviceStatusTour } from '../../services/webServices.js';\nimport { RESET_PACKAGE_TOUR, GET_PACKAGE_TOUR, PACKAGE_TOUR_SUCCESS, PACKAGE_TOUR_FAILED, POST_STATUS_TOUR, STATUS_TOUR_SUCCESS, STATUS_TOUR_FAILED } from '../../config/constant.js';\n\nexport function packageTourAction(dispact, params, token) {\n  dispact(doPackageTour())\n  return servicePackageTours(params, token)\n    .then(res => {\n      dispact(packageTourSuccess(res.data.items, res.meta));\n    })\n    .catch(err => {\n      return dispact(packageTourlFailed(false))\n    })\n}\n\nexport function statusToursAction(dispact, id, data, callback) {\n  dispact(updateStatus())\n  return serviceStatusTour(id, data)\n    .then(res => {\n      callback.call(this, res)\n      dispact(statusToursSuccess(this, res));\n    })\n    .catch(() => {\n      return dispact(statusToursFailed(false))\n    })\n}\n\nfunction doPackageTour(payload) {\n  return {\n    type: GET_PACKAGE_TOUR,\n    data: payload\n  }\n}\n\nfunction packageTourSuccess(payload, meta) {\n  return {\n    type: PACKAGE_TOUR_SUCCESS,\n    data: payload,\n  }\n}\n\nfunction packageTourlFailed() {\n  return {\n    type: PACKAGE_TOUR_FAILED\n  }\n}\nfunction updateStatus() {\n  return {\n    type: POST_STATUS_TOUR\n  }\n}\nfunction statusToursSuccess(payload, meta) {\n  return {\n    type: STATUS_TOUR_SUCCESS,\n    data: payload,\n    meta: meta\n  }\n}\nfunction statusToursFailed() {\n  return {\n    type: STATUS_TOUR_FAILED\n  }\n}\n\n//RESET PACKAGE TOUR\nexport function resetPackageTour(dispact) {\n  dispact(resetPackageTourSuccess());\n}\nfunction resetPackageTourSuccess(payload) {\n  return {\n    type: RESET_PACKAGE_TOUR,\n    data: payload\n  }\n}"]},"metadata":{},"sourceType":"module"}