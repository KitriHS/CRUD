{"ast":null,"code":"import { servicesUploadImage, servicesListBanner, deleteBanner } from \"./../../services/webServices\";\nimport { DO_UPLOAD_IMAGE, UPLOAD_IMAGE_SUCCESS, UPLOAD_IMAGE_FAILED, DO_LIST_BANNER, LIST_BANNER_SUCCESS, LIST_BANNER_FAILED, DO_DELETE_BANNER, DELETE_BANNER_SUCCESS, DELETE_BANNER_FAILED } from \"./../../config/constant\"; //GET LIST BANNER\n\nexport function bannerAction(dispatch, token) {\n  dispatch(doListBanner());\n  return servicesListBanner(token).then(function (res) {\n    dispatch(listBannerSuccess(res.data, res.meta));\n  }).catch(function (err) {\n    return dispatch(listBannerFailed(false));\n  });\n}\n\nfunction doListBanner() {\n  return {\n    type: DO_LIST_BANNER\n  };\n}\n\nfunction listBannerSuccess(payload, meta) {\n  return {\n    type: LIST_BANNER_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction listBannerFailed() {\n  return {\n    type: LIST_BANNER_FAILED\n  };\n} // SETTING ACTION\n\n\nexport function postUploadImage(dispatch, data, callback) {\n  var _this = this;\n\n  dispatch(doUploadImage());\n  return servicesUploadImage(data).then(function (res) {\n    dispatch(uploadImageSuccess(res.data));\n    callback.call(_this, res);\n  }).catch(function () {\n    return dispatch(uploadImageFailed(false));\n  });\n} //DELETE BANNER\n\nexport function deleteBannerAction(dispatch, params, token, callback) {\n  var _this2 = this;\n\n  dispatch(doDelete());\n  return deleteBanner(params.id, token).then(function (res) {\n    dispatch(deleteSuccess(res));\n    callback.call(_this2, res);\n  }).catch(function () {\n    return dispatch(deleteFailed(false));\n  });\n}\n\nfunction doDelete() {\n  return {\n    type: DO_DELETE_BANNER\n  };\n}\n\nfunction deleteSuccess(payload) {\n  return {\n    type: DELETE_BANNER_SUCCESS,\n    data: payload\n  };\n}\n\nfunction deleteFailed() {\n  return {\n    type: DELETE_BANNER_FAILED\n  };\n} // SETTING ACTION\n\n\nfunction doUploadImage(payload) {\n  return {\n    type: DO_UPLOAD_IMAGE,\n    data: payload\n  };\n}\n\nfunction uploadImageSuccess(payload) {\n  return {\n    type: UPLOAD_IMAGE_SUCCESS,\n    data: payload\n  };\n}\n\nfunction uploadImageFailed() {\n  return {\n    type: UPLOAD_IMAGE_FAILED\n  };\n}","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/setting/Action.js"],"names":["servicesUploadImage","servicesListBanner","deleteBanner","DO_UPLOAD_IMAGE","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILED","DO_LIST_BANNER","LIST_BANNER_SUCCESS","LIST_BANNER_FAILED","DO_DELETE_BANNER","DELETE_BANNER_SUCCESS","DELETE_BANNER_FAILED","bannerAction","dispatch","token","doListBanner","then","res","listBannerSuccess","data","meta","catch","err","listBannerFailed","type","payload","postUploadImage","callback","doUploadImage","uploadImageSuccess","call","uploadImageFailed","deleteBannerAction","params","doDelete","id","deleteSuccess","deleteFailed"],"mappings":"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","sourcesContent":["import { servicesUploadImage, servicesListBanner, deleteBanner } from \"./../../services/webServices\";\nimport { DO_UPLOAD_IMAGE, UPLOAD_IMAGE_SUCCESS, UPLOAD_IMAGE_FAILED,\n  DO_LIST_BANNER, LIST_BANNER_SUCCESS, LIST_BANNER_FAILED, DO_DELETE_BANNER, DELETE_BANNER_SUCCESS, DELETE_BANNER_FAILED } from \"./../../config/constant\";\n\n//GET LIST BANNER\nexport function bannerAction(dispatch, token) {\n  dispatch(doListBanner())\n  return servicesListBanner(token)\n  .then( res => {\n    dispatch(listBannerSuccess(res.data, res.meta));\n  })\n  .catch(err => {\n    return dispatch(listBannerFailed(false))\n  })\n}\n\nfunction doListBanner() {\n  return {\n    type: DO_LIST_BANNER\n  }\n}\n\nfunction listBannerSuccess(payload, meta) {\n  return {\n    type: LIST_BANNER_SUCCESS,\n    data: payload,\n    meta:meta\n  }\n}\n\nfunction listBannerFailed() {\n  return {\n    type: LIST_BANNER_FAILED\n  }\n}\n\n// SETTING ACTION\nexport function postUploadImage(dispatch, data, callback) {\n  dispatch(doUploadImage());\n  return servicesUploadImage(data)\n    .then(res => {\n      dispatch(uploadImageSuccess(res.data));\n      callback.call(this,res);\n    })\n    .catch(() => {\n      return dispatch(uploadImageFailed(false));\n    });\n}\n\n//DELETE BANNER\nexport function deleteBannerAction(dispatch, params, token , callback) {\n  dispatch(doDelete());\n  return deleteBanner(params.id, token)\n    .then(res => {\n      dispatch(deleteSuccess(res));\n      callback.call(this,res);\n    })\n    .catch(() => {\n      return dispatch(deleteFailed(false));\n    });\n}\n\nfunction doDelete() {\n  return {\n    type: DO_DELETE_BANNER,\n  };\n}\n\nfunction deleteSuccess(payload) {\n  return {\n    type: DELETE_BANNER_SUCCESS,\n    data: payload,\n  };\n}\n\nfunction deleteFailed() {\n  return {\n    type: DELETE_BANNER_FAILED\n  };\n}\n\n// SETTING ACTION\nfunction doUploadImage(payload) {\n  return {\n    type: DO_UPLOAD_IMAGE,\n    data: payload\n  };\n}\n\nfunction uploadImageSuccess(payload) {\n  return {\n    type: UPLOAD_IMAGE_SUCCESS,\n    data: payload\n  };\n}\n\nfunction uploadImageFailed() {\n  return {\n    type: UPLOAD_IMAGE_FAILED\n  };\n}\n"]},"metadata":{},"sourceType":"module"}