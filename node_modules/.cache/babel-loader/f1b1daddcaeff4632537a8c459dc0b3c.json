{"ast":null,"code":"import _classCallCheck from \"/Users/kitrihapsari/Documents/projects/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kitrihapsari/Documents/projects/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kitrihapsari/Documents/projects/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kitrihapsari/Documents/projects/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kitrihapsari/Documents/projects/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kitrihapsari/Documents/projects/cmsasitaaja/src/component/Loading/Component.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import { css } from '@emotion/core';\n\nimport { SyncLoader, PulseLoader } from 'react-spinners'; // import ClipLoader from 'react-spinners/ClipLoader';\n\nvar Component =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  function Component(props) {\n    var _this;\n\n    _classCallCheck(this, Component);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Component).call(this, props));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Component, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$display = _this$props.display,\n          display = _this$props$display === void 0 ? 'block' : _this$props$display,\n          _this$props$type = _this$props.type,\n          type = _this$props$type === void 0 ? \"\" : _this$props$type,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? 'sweet-loading' : _this$props$className,\n          _this$props$margin = _this$props.margin,\n          margin = _this$props$margin === void 0 ? '0 auto' : _this$props$margin,\n          brdColor = _this$props.brdColor,\n          _this$props$sizeUnit = _this$props.sizeUnit,\n          sizeUnit = _this$props$sizeUnit === void 0 ? 'px' : _this$props$sizeUnit,\n          _this$props$size = _this$props.size,\n          size = _this$props$size === void 0 ? 15 : _this$props$size,\n          _this$props$color = _this$props.color,\n          color = _this$props$color === void 0 ? '#123abc' : _this$props$color,\n          _this$props$loading = _this$props.loading,\n          loading = _this$props$loading === void 0 ? false : _this$props$loading; // let override = css`\n      //   display:${display};\n      //   margin: ${margin};\n      //   border-color: ${brdColor};\n      // `;\n\n      if (type == \"PulseLoader\") {\n        return React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(PulseLoader // css={override}\n        , {\n          sizeUnit: sizeUnit,\n          size: size,\n          color: color,\n          loading: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(SyncLoader // css={override}\n        , {\n          sizeUnit: sizeUnit,\n          size: size,\n          color: color,\n          loading: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return Component;\n}(React.Component);\n\nexport { Component as default };\nComponent.propTypes = {\n  display: PropTypes.string,\n  className: PropTypes.string,\n  margin: PropTypes.string,\n  brdColor: PropTypes.string,\n  sizeUnit: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  loading: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/projects/cmsasitaaja/src/component/Loading/Component.js"],"names":["React","PropTypes","SyncLoader","PulseLoader","Component","props","state","loading","display","type","className","margin","brdColor","sizeUnit","size","color","propTypes","string","number","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,gBAAxC,C,CACA;;IAGqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB;;;;6BACQ;AAAA,wBAC4I,KAAKF,KADjJ;AAAA,4CACCG,OADD;AAAA,UACCA,OADD,oCACS,OADT;AAAA,yCACiBC,IADjB;AAAA,UACiBA,IADjB,iCACsB,EADtB;AAAA,8CAC0BC,SAD1B;AAAA,UAC0BA,SAD1B,sCACoC,eADpC;AAAA,2CACqDC,MADrD;AAAA,UACqDA,MADrD,mCAC4D,QAD5D;AAAA,UACsEC,QADtE,eACsEA,QADtE;AAAA,6CACgFC,QADhF;AAAA,UACgFA,QADhF,qCACyF,IADzF;AAAA,yCAC+FC,IAD/F;AAAA,UAC+FA,IAD/F,iCACoG,EADpG;AAAA,0CACwGC,KADxG;AAAA,UACwGA,KADxG,kCAC8G,SAD9G;AAAA,4CACyHR,OADzH;AAAA,UACyHA,OADzH,oCACmI,KADnI,wBAEP;AACA;AACA;AACA;AACA;;AACA,UAAIE,IAAI,IAAE,aAAV,EAAwB;AACtB,eACE;AAAK,UAAA,SAAS,EAAEC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD,CACE;AADF;AAEE,UAAA,QAAQ,EAAEG,QAFZ;AAGE,UAAA,IAAI,EAAEC,IAHR;AAIE,UAAA,KAAK,EAAEC,KAJT;AAKE,UAAA,OAAO,EAAER,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAWD,OAZD,MAYM;AACJ,eACE;AAAK,UAAA,SAAS,EAAEG,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD,CACE;AADF;AAEE,UAAA,QAAQ,EAAEG,QAFZ;AAGE,UAAA,IAAI,EAAEC,IAHR;AAIE,UAAA,KAAK,EAAEC,KAJT;AAKE,UAAA,OAAO,EAAER,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAWD;AACF;;;;EAvCoCP,KAAK,CAACI,S;;SAAxBA,S;AA0CrBA,SAAS,CAACY,SAAV,GAAsB;AACpBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,MADC;AAEpBP,EAAAA,SAAS,EAAGT,SAAS,CAACgB,MAFF;AAGpBN,EAAAA,MAAM,EAAEV,SAAS,CAACgB,MAHE;AAIpBL,EAAAA,QAAQ,EAAEX,SAAS,CAACgB,MAJA;AAKpBJ,EAAAA,QAAQ,EAAEZ,SAAS,CAACgB,MALA;AAMpBH,EAAAA,IAAI,EAAEb,SAAS,CAACiB,MANI;AAOpBH,EAAAA,KAAK,EAAEd,SAAS,CAACgB,MAPG;AAQpBV,EAAAA,OAAO,EAAEN,SAAS,CAACkB;AARC,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import { css } from '@emotion/core';\nimport { SyncLoader, PulseLoader } from 'react-spinners';\n// import ClipLoader from 'react-spinners/ClipLoader';\n \n\nexport default class Component extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n  }\n  render() {\n    const { display='block',type=\"\", className='sweet-loading', margin='0 auto', brdColor, sizeUnit='px', size=15, color='#123abc', loading = false }= this.props;\n    // let override = css`\n    //   display:${display};\n    //   margin: ${margin};\n    //   border-color: ${brdColor};\n    // `;\n    if (type==\"PulseLoader\"){\n      return(\n        <div className={className}>\n          <PulseLoader\n            // css={override}\n            sizeUnit={sizeUnit}\n            size={size}\n            color={color}\n            loading={loading}\n          />\n        </div> \n      );\n    }else {\n      return (\n        <div className={className}>\n          <SyncLoader\n            // css={override}\n            sizeUnit={sizeUnit}\n            size={size}\n            color={color}\n            loading={loading}\n          />\n        </div> \n      );\n    }\n  }\n}\n\nComponent.propTypes = {\n  display: PropTypes.string, \n  className : PropTypes.string, \n  margin: PropTypes.string, \n  brdColor: PropTypes.string, \n  sizeUnit: PropTypes.string, \n  size: PropTypes.number, \n  color: PropTypes.string,\n  loading: PropTypes.bool\n};\n "]},"metadata":{},"sourceType":"module"}