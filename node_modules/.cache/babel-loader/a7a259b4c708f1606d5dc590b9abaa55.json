{"ast":null,"code":"var _jsxFileName = \"/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/umrah/components/TopImage.js\";\nimport React, { useRef } from 'react';\nimport { pluscircle } from './data';\nexport default (function (props) {\n  var onChange = props.onChange,\n      image = props.image;\n  var createRef = useRef(); // Function Upload\n\n  var onUploadImage = function onUploadImage(e) {\n    var file = e.target.files[0];\n    var extentions = ['png', 'jpg', 'jpeg'];\n    var reader = new FileReader(file);\n\n    reader.onload = function (evnt) {\n      var img = evnt.target.result;\n      var dataFileExtention = img.split(';');\n      var fileExtention = dataFileExtention[0].split('/')[1];\n      var acceptExtention = false;\n      var allowExtention = '';\n      extentions.forEach(function (obj) {\n        obj === fileExtention ? acceptExtention = true : allowExtention += obj + ', ';\n      });\n\n      if (acceptExtention) {\n        onChange ? onChange(img) : alert('');\n      } else {\n        alert(\"Image Extention not Allow (Allowed: \".concat(allowExtention.substr(0, allowExtention.length - 2), \")\"));\n      }\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"u-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, image ? React.createElement(\"div\", {\n    className: \"u-box-upload-img\",\n    style: {\n      border: 'none'\n    },\n    onClick: function onClick() {\n      return createRef.current.click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: function onChange(e) {\n      return onUploadImage(e);\n    },\n    ref: createRef,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      height: '100%',\n      borderRadius: 10,\n      border: 'none'\n    },\n    src: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"u-box-upload-img\",\n    onClick: function onClick() {\n      return createRef.current.click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: function onChange(e) {\n      return onUploadImage(e);\n    },\n    ref: createRef,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    width: \"30px\",\n    src: pluscircle,\n    alt: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"u-choose-picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Choose Picture\")), React.createElement(\"div\", {\n    className: \"u-text-upload-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Ukuran gambar minimum 2560 x 511 pixel\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), \"File gambar harus berupa format JPEG dan PNG, Gambar tidak boleh melebihi 32MB\"));\n});","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/umrah/components/TopImage.js"],"names":["React","useRef","pluscircle","props","onChange","image","createRef","onUploadImage","e","file","target","files","extentions","reader","FileReader","onload","evnt","img","result","dataFileExtention","split","fileExtention","acceptExtention","allowExtention","forEach","obj","alert","substr","length","readAsDataURL","border","current","click","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { pluscircle } from './data'\n\nexport default (props) => {\n  const { onChange, image } = props;\n  let createRef = useRef();\n\n  // Function Upload\n  const onUploadImage = (e) => {\n    let file = e.target.files[0];\n    const extentions = ['png', 'jpg', 'jpeg'];\n    let reader = new FileReader(file);\n    reader.onload = (evnt) => {\n      let img = evnt.target.result;\n      const dataFileExtention = img.split(';');\n      const fileExtention = dataFileExtention[0].split('/')[1];\n      let acceptExtention = false;\n      let allowExtention = '';\n      extentions.forEach((obj) => {\n        obj === fileExtention ? (acceptExtention = true) : (allowExtention += obj + ', ');\n      });\n      if (acceptExtention) {\n        onChange ?\n          onChange(img) : alert('');\n      } else {\n        alert(`Image Extention not Allow (Allowed: ${allowExtention.substr(0, allowExtention.length - 2)})`);\n      }\n    }\n    reader.readAsDataURL(file);\n  }\n\n  return (\n    <div className=\"u-box\">\n      {image ?\n        <div className=\"u-box-upload-img\" style={{ border: 'none' }} onClick={() => createRef.current.click()}>\n          <input type=\"file\" onChange={(e) => onUploadImage(e)} ref={createRef} hidden />\n          <img\n            style={{ height: '100%', borderRadius: 10, border: 'none' }}\n            src={image}\n          />\n        </div>\n        :\n        <div className=\"u-box-upload-img\" onClick={() => createRef.current.click()}>\n          <input type=\"file\" onChange={(e) => onUploadImage(e)} ref={createRef} hidden />\n          <img width=\"30px\" src={pluscircle} alt=\"icon\" />\n          <div className=\"u-choose-picture\">Choose Picture</div>\n        </div>\n      }\n      <div className=\"u-text-upload-img\">Ukuran gambar minimum 2560 x 511 pixel<br />\n      File gambar harus berupa format JPEG dan PNG, Gambar tidak boleh melebihi 32MB\n    </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}