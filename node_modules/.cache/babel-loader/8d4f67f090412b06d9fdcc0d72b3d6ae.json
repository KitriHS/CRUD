{"ast":null,"code":"import { serviceListAgentSub } from '../../services/webServices';\nimport { DO_LIST_AGENTSUB, LIST_AGENT_SUB_SUCCESS, LIST_AGENT_SUB_FAILED, RESET_LIST_AGENT_SUB_SUCCESS, DO_LOAD_ALL_AGENTSUB, LOAD_ALL_AGENTSUB_SUCCESS, LOAD_ALL_AGENTSUB_FAILED } from '../../config/constant'; //LIST AGENT SUB AGENT ACTION\n\nexport function listAgentSubAction(dispatch, params, token) {\n  dispatch(doListAgentSub());\n  return serviceListAgentSub(params, token).then(function (res) {\n    setTimeout(function () {\n      dispatch(listAgentSubSuccess(res.data, res.meta));\n    }, 3000);\n  }).catch(function (err) {\n    return dispatch(listAgentSubFailed(false));\n  });\n}\n\nfunction doListAgentSub() {\n  return {\n    type: DO_LIST_AGENTSUB\n  };\n}\n\nfunction listAgentSubSuccess(payload, meta) {\n  return {\n    type: LIST_AGENT_SUB_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction listAgentSubFailed() {\n  return {\n    type: LIST_AGENT_SUB_FAILED\n  };\n} //ALL DATA AGENT SUB AGENT\n\n\nexport function loadAllDataAgentSubAction(dispatch, params, token) {\n  dispatch(doLoadAllListAgentSub());\n  return serviceListAgentSub(params, token).then(function (res) {\n    setTimeout(function () {\n      // callback.call(this, res)\n      dispatch(listAllAgentSubSuccess(res.data, res.meta));\n    }, 3000);\n  }).catch(function (err) {\n    return dispatch(listAllAgentSubFailed(false));\n  });\n}\n\nfunction doLoadAllListAgentSub() {\n  return {\n    type: DO_LOAD_ALL_AGENTSUB\n  };\n}\n\nfunction listAllAgentSubSuccess(payload, meta) {\n  return {\n    type: LOAD_ALL_AGENTSUB_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction listAllAgentSubFailed() {\n  return {\n    type: LOAD_ALL_AGENTSUB_FAILED\n  };\n}\n\nexport function resetAllListAgentSubAction(dispatch) {\n  dispatch(resetAllListAgentSubSuccess());\n}\n\nfunction resetAllListAgentSubSuccess(payload) {\n  return {\n    type: RESET_LIST_AGENT_SUB_SUCCESS,\n    data: payload\n  };\n}","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/agents/Action.js"],"names":["serviceListAgentSub","DO_LIST_AGENTSUB","LIST_AGENT_SUB_SUCCESS","LIST_AGENT_SUB_FAILED","RESET_LIST_AGENT_SUB_SUCCESS","DO_LOAD_ALL_AGENTSUB","LOAD_ALL_AGENTSUB_SUCCESS","LOAD_ALL_AGENTSUB_FAILED","listAgentSubAction","dispatch","params","token","doListAgentSub","then","res","setTimeout","listAgentSubSuccess","data","meta","catch","err","listAgentSubFailed","type","payload","loadAllDataAgentSubAction","doLoadAllListAgentSub","listAllAgentSubSuccess","listAllAgentSubFailed","resetAllListAgentSubAction","resetAllListAgentSubSuccess"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,4BAApC;AACA,SACEC,gBADF,EACoBC,sBADpB,EAC4CC,qBAD5C,EACmEC,4BADnE,EAEEC,oBAFF,EAEwBC,yBAFxB,EAEmDC,wBAFnD,QAGO,uBAHP,C,CAKA;;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,MAAtC,EAA8CC,KAA9C,EAAqD;AAC1DF,EAAAA,QAAQ,CAACG,cAAc,EAAf,CAAR;AACA,SAAOZ,mBAAmB,CAACU,MAAD,EAASC,KAAT,CAAnB,CACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACXC,IAAAA,UAAU,CAAC,YAAM;AACfN,MAAAA,QAAQ,CAACO,mBAAmB,CAACF,GAAG,CAACG,IAAL,EAAWH,GAAG,CAACI,IAAf,CAApB,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALI,EAMJC,KANI,CAME,UAAAC,GAAG,EAAI;AACZ,WAAOX,QAAQ,CAACY,kBAAkB,CAAC,KAAD,CAAnB,CAAf;AACD,GARI,CAAP;AASD;;AACD,SAAST,cAAT,GAA0B;AACxB,SAAO;AACLU,IAAAA,IAAI,EAAErB;AADD,GAAP;AAGD;;AACD,SAASe,mBAAT,CAA6BO,OAA7B,EAAsCL,IAAtC,EAA4C;AAC1C,SAAO;AACLI,IAAAA,IAAI,EAAEpB,sBADD;AAELe,IAAAA,IAAI,EAAEM,OAFD;AAGLL,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD;;AACD,SAASG,kBAAT,GAA8B;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAEnB;AADD,GAAP;AAGD,C,CACD;;;AACA,OAAO,SAASqB,yBAAT,CAAmCf,QAAnC,EAA6CC,MAA7C,EAAqDC,KAArD,EAA4D;AACjEF,EAAAA,QAAQ,CAACgB,qBAAqB,EAAtB,CAAR;AACA,SAAOzB,mBAAmB,CAACU,MAAD,EAASC,KAAT,CAAnB,CACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACXC,IAAAA,UAAU,CAAC,YAAM;AACf;AACAN,MAAAA,QAAQ,CAACiB,sBAAsB,CAACZ,GAAG,CAACG,IAAL,EAAWH,GAAG,CAACI,IAAf,CAAvB,CAAR;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GANI,EAOJC,KAPI,CAOE,UAAAC,GAAG,EAAI;AACZ,WAAOX,QAAQ,CAACkB,qBAAqB,CAAC,KAAD,CAAtB,CAAf;AACD,GATI,CAAP;AAUD;;AACD,SAASF,qBAAT,GAAiC;AAC/B,SAAO;AACLH,IAAAA,IAAI,EAAEjB;AADD,GAAP;AAGD;;AACD,SAASqB,sBAAT,CAAgCH,OAAhC,EAAyCL,IAAzC,EAA+C;AAC7C,SAAO;AACLI,IAAAA,IAAI,EAAEhB,yBADD;AAELW,IAAAA,IAAI,EAAEM,OAFD;AAGLL,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD;;AACD,SAASS,qBAAT,GAAiC;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAEf;AADD,GAAP;AAGD;;AACD,OAAO,SAASqB,0BAAT,CAAoCnB,QAApC,EAA8C;AACnDA,EAAAA,QAAQ,CAACoB,2BAA2B,EAA5B,CAAR;AACD;;AACD,SAASA,2BAAT,CAAqCN,OAArC,EAA8C;AAC5C,SAAO;AACLD,IAAAA,IAAI,EAAElB,4BADD;AAELa,IAAAA,IAAI,EAAEM;AAFD,GAAP;AAID","sourcesContent":["import { serviceListAgentSub } from '../../services/webServices'\nimport {\n  DO_LIST_AGENTSUB, LIST_AGENT_SUB_SUCCESS, LIST_AGENT_SUB_FAILED, RESET_LIST_AGENT_SUB_SUCCESS,\n  DO_LOAD_ALL_AGENTSUB, LOAD_ALL_AGENTSUB_SUCCESS, LOAD_ALL_AGENTSUB_FAILED\n} from '../../config/constant'\n\n//LIST AGENT SUB AGENT ACTION\nexport function listAgentSubAction(dispatch, params, token) {\n  dispatch(doListAgentSub())\n  return serviceListAgentSub(params, token)\n    .then(res => {\n      setTimeout(() => {\n        dispatch(listAgentSubSuccess(res.data, res.meta))\n      }, 3000)\n    })\n    .catch(err => {\n      return dispatch(listAgentSubFailed(false))\n    })\n}\nfunction doListAgentSub() {\n  return {\n    type: DO_LIST_AGENTSUB\n  }\n}\nfunction listAgentSubSuccess(payload, meta) {\n  return {\n    type: LIST_AGENT_SUB_SUCCESS,\n    data: payload,\n    meta: meta\n  }\n}\nfunction listAgentSubFailed() {\n  return {\n    type: LIST_AGENT_SUB_FAILED\n  }\n}\n//ALL DATA AGENT SUB AGENT\nexport function loadAllDataAgentSubAction(dispatch, params, token) {\n  dispatch(doLoadAllListAgentSub())\n  return serviceListAgentSub(params, token)\n    .then(res => {\n      setTimeout(() => {\n        // callback.call(this, res)\n        dispatch(listAllAgentSubSuccess(res.data, res.meta))\n      }, 3000)\n    })\n    .catch(err => {\n      return dispatch(listAllAgentSubFailed(false))\n    })\n}\nfunction doLoadAllListAgentSub() {\n  return {\n    type: DO_LOAD_ALL_AGENTSUB\n  }\n}\nfunction listAllAgentSubSuccess(payload, meta) {\n  return {\n    type: LOAD_ALL_AGENTSUB_SUCCESS,\n    data: payload,\n    meta: meta\n  }\n}\nfunction listAllAgentSubFailed() {\n  return {\n    type: LOAD_ALL_AGENTSUB_FAILED\n  }\n}\nexport function resetAllListAgentSubAction(dispatch) {\n  dispatch(resetAllListAgentSubSuccess())\n}\nfunction resetAllListAgentSubSuccess(payload) {\n  return {\n    type: RESET_LIST_AGENT_SUB_SUCCESS,\n    data: payload\n  }\n}"]},"metadata":{},"sourceType":"module"}