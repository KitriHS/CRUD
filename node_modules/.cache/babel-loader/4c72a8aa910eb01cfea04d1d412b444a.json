{"ast":null,"code":"import _toConsumableArray from \"/Users/kitrihapsari/Documents/React/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/kitrihapsari/Documents/React/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { DO_LIST_FLIGHT, LIST_FLIGHT_SUCCESS, LIST_FLIGHT_FAILED, RESET_FLIGHT_SUCCESS, DO_LIST_FLIGHT1, LIST_FLIGHT_FAILED1, LIST_FLIGHT_SUCCESS1 } from '../../config/constant';\nvar INITIAL_STATE = {\n  fetchingListFlight: false,\n  dataListFlight: [],\n  meta: null,\n  dataFlight: []\n};\nexport default function dataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var dataListFlight = state.dataListFlight,\n      dataFlight = state.dataFlight;\n\n  switch (action.type) {\n    case DO_LIST_FLIGHT:\n      {\n        return _objectSpread({}, state, {\n          fetchingListFlight: true\n        });\n      }\n\n    case LIST_FLIGHT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          fetchingListFlight: false,\n          dataListFlight: _toConsumableArray(action.data),\n          meta: action.meta\n        });\n      }\n\n    case LIST_FLIGHT_FAILED:\n      {\n        return _objectSpread({}, state, {\n          fetchingListFlight: false\n        });\n      }\n    //ALL DATA USER\n\n    case DO_LIST_FLIGHT1:\n      {\n        return _objectSpread({}, state, {\n          fetchingListFlight: true\n        });\n      }\n\n    case LIST_FLIGHT_SUCCESS1:\n      {\n        return _objectSpread({}, state, {\n          fetchingListFlight: false,\n          dataFlight: action.data,\n          meta: action.meta\n        });\n      }\n\n    case LIST_FLIGHT_FAILED1:\n      {\n        return _objectSpread({}, state, {\n          fetchingListFlight: false\n        });\n      }\n\n    case RESET_FLIGHT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          fetchingListFlight: false,\n          dataListFlight: []\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/flight/Reducer.js"],"names":["DO_LIST_FLIGHT","LIST_FLIGHT_SUCCESS","LIST_FLIGHT_FAILED","RESET_FLIGHT_SUCCESS","DO_LIST_FLIGHT1","LIST_FLIGHT_FAILED1","LIST_FLIGHT_SUCCESS1","INITIAL_STATE","fetchingListFlight","dataListFlight","meta","dataFlight","dataReducer","state","action","type","data"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,mBAAzB,EAA8CC,kBAA9C,EAAkEC,oBAAlE,EAAwFC,eAAxF,EAAyGC,mBAAzG,EAA8HC,oBAA9H,QAA0J,uBAA1J;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,kBAAkB,EAAE,KADA;AAEpBC,EAAAA,cAAc,EAAG,EAFG;AAGpBC,EAAAA,IAAI,EAAC,IAHe;AAIpBC,EAAAA,UAAU,EAAG;AAJO,CAAtB;AAOA,eAAe,SAASC,WAAT,GAAoD;AAAA,MAA/BC,KAA+B,uEAAvBN,aAAuB;AAAA,MAARO,MAAQ;AAAA,MAC3DL,cAD2D,GAC5BI,KAD4B,CAC3DJ,cAD2D;AAAA,MAC3CE,UAD2C,GAC5BE,KAD4B,CAC3CF,UAD2C;;AAEjE,UAAOG,MAAM,CAACC,IAAd;AACE,SAAKf,cAAL;AAAsB;AACpB,iCACKa,KADL;AAEEL,UAAAA,kBAAkB,EAAE;AAFtB;AAID;;AACD,SAAKP,mBAAL;AAA0B;AACxB,iCACKY,KADL;AAEEL,UAAAA,kBAAkB,EAAE,KAFtB;AAGEC,UAAAA,cAAc,qBAAKK,MAAM,CAACE,IAAZ,CAHhB;AAIEN,UAAAA,IAAI,EAACI,MAAM,CAACJ;AAJd;AAMD;;AACD,SAAKR,kBAAL;AAAyB;AACvB,iCACKW,KADL;AAEEL,UAAAA,kBAAkB,EAAE;AAFtB;AAID;AAED;;AACA,SAAKJ,eAAL;AAAuB;AACrB,iCACKS,KADL;AAEEL,UAAAA,kBAAkB,EAAE;AAFtB;AAID;;AACD,SAAKF,oBAAL;AAA2B;AACzB,iCACKO,KADL;AAEEL,UAAAA,kBAAkB,EAAE,KAFtB;AAGEG,UAAAA,UAAU,EAACG,MAAM,CAACE,IAHpB;AAIEN,UAAAA,IAAI,EAACI,MAAM,CAACJ;AAJd;AAMD;;AACD,SAAKL,mBAAL;AAA0B;AACxB,iCACKQ,KADL;AAEEL,UAAAA,kBAAkB,EAAE;AAFtB;AAID;;AACD,SAAKL,oBAAL;AAA2B;AACzB,iCACKU,KADL;AAEEL,UAAAA,kBAAkB,EAAE,KAFtB;AAGEC,UAAAA,cAAc,EAAC;AAHjB;AAKD;;AACD;AACE,aAAOI,KAAP;AAnDJ;AAqDD","sourcesContent":["import { DO_LIST_FLIGHT, LIST_FLIGHT_SUCCESS, LIST_FLIGHT_FAILED, RESET_FLIGHT_SUCCESS, DO_LIST_FLIGHT1, LIST_FLIGHT_FAILED1, LIST_FLIGHT_SUCCESS1 } from '../../config/constant';\n\nconst INITIAL_STATE = {\n  fetchingListFlight: false,\n  dataListFlight : [],\n  meta:null,\n  dataFlight : []\n}\n\nexport default function dataReducer(state = INITIAL_STATE, action) {\n  let { dataListFlight, dataFlight } = state;\n  switch(action.type) {\n    case DO_LIST_FLIGHT : {\n      return {\n        ...state,\n        fetchingListFlight: true\n      }\n    }\n    case LIST_FLIGHT_SUCCESS: {\n      return {\n        ...state,\n        fetchingListFlight: false,\n        dataListFlight:[...action.data],\n        meta:action.meta\n      }\n    }\n    case LIST_FLIGHT_FAILED: {\n      return {\n        ...state,\n        fetchingListFlight: false,\n      }\n    }\n\n    //ALL DATA USER\n    case DO_LIST_FLIGHT1 : {\n      return {\n        ...state,\n        fetchingListFlight: true\n      }\n    }\n    case LIST_FLIGHT_SUCCESS1: {\n      return {\n        ...state,\n        fetchingListFlight: false,\n        dataFlight:action.data,\n        meta:action.meta\n      }\n    }\n    case LIST_FLIGHT_FAILED1: {\n      return {\n        ...state,\n        fetchingListFlight: false,\n      }\n    }\n    case RESET_FLIGHT_SUCCESS: {\n      return {\n        ...state,\n        fetchingListFlight: false,\n        dataListFlight:[]\n      }\n    }\n    default: \n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}