{"ast":null,"code":"import { servicesListFlight } from '../../services/webServices';\nimport { DO_LIST_FLIGHT, LIST_FLIGHT_SUCCESS, LIST_FLIGHT_FAILED, RESET_FLIGHT_SUCCESS, DO_LIST_FLIGHT1, LIST_FLIGHT_FAILED1, LIST_FLIGHT_SUCCESS1 } from '../../config/constant'; //LOGIN ACTION\n\nexport function flightAction(dispatch, params, token) {\n  dispatch(doListFlight());\n  return servicesListFlight(params, token).then(function (res) {\n    dispatch(listFlightSuccess(res.data, res.meta));\n  }).catch(function (err) {\n    return dispatch(listFlightFailed(false));\n  });\n}\nexport function flightAction1(dispatch, params, token) {\n  dispatch(doListFlight1());\n  return servicesListFlight(params, token).then(function (res) {\n    dispatch(listFlightSuccess1(res.data, res.meta));\n  }).catch(function (err) {\n    return dispatch(listFlightFailed1(false));\n  });\n} //RESET LIST FLIGHT\n\nexport function resetFlightAction(dispatch) {\n  dispatch(resetListFlightSuccess());\n}\n\nfunction doListFlight() {\n  return {\n    type: DO_LIST_FLIGHT\n  };\n}\n\nfunction listFlightSuccess(payload, meta) {\n  return {\n    type: LIST_FLIGHT_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction listFlightFailed() {\n  return {\n    type: LIST_FLIGHT_FAILED\n  };\n}\n\nfunction doListFlight1() {\n  return {\n    type: DO_LIST_FLIGHT1\n  };\n}\n\nfunction listFlightSuccess1(payload, meta) {\n  return {\n    type: LIST_FLIGHT_SUCCESS1,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction listFlightFailed1() {\n  return {\n    type: LIST_FLIGHT_FAILED1\n  };\n}\n\nfunction resetListFlightSuccess(payload) {\n  return {\n    type: RESET_FLIGHT_SUCCESS,\n    data: payload\n  };\n}","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/flight/Action.js"],"names":["servicesListFlight","DO_LIST_FLIGHT","LIST_FLIGHT_SUCCESS","LIST_FLIGHT_FAILED","RESET_FLIGHT_SUCCESS","DO_LIST_FLIGHT1","LIST_FLIGHT_FAILED1","LIST_FLIGHT_SUCCESS1","flightAction","dispatch","params","token","doListFlight","then","res","listFlightSuccess","data","meta","catch","err","listFlightFailed","flightAction1","doListFlight1","listFlightSuccess1","listFlightFailed1","resetFlightAction","resetListFlightSuccess","type","payload"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,4BAAnC;AACA,SAASC,cAAT,EAAyBC,mBAAzB,EAA8CC,kBAA9C,EAAmEC,oBAAnE,EAAyFC,eAAzF,EAA0GC,mBAA1G,EAA+HC,oBAA/H,QAA2J,uBAA3J,C,CAEA;;AACA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+C;AACpDF,EAAAA,QAAQ,CAACG,YAAY,EAAb,CAAR;AACA,SAAOZ,kBAAkB,CAACU,MAAD,EAASC,KAAT,CAAlB,CACNE,IADM,CACA,UAAAC,GAAG,EAAI;AACZL,IAAAA,QAAQ,CAACM,iBAAiB,CAACD,GAAG,CAACE,IAAL,EAAWF,GAAG,CAACG,IAAf,CAAlB,CAAR;AACD,GAHM,EAINC,KAJM,CAIA,UAAAC,GAAG,EAAI;AACZ,WAAOV,QAAQ,CAACW,gBAAgB,CAAC,KAAD,CAAjB,CAAf;AACD,GANM,CAAP;AAOD;AAED,OAAO,SAASC,aAAT,CAAuBZ,QAAvB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgD;AACrDF,EAAAA,QAAQ,CAACa,aAAa,EAAd,CAAR;AACA,SAAOtB,kBAAkB,CAACU,MAAD,EAASC,KAAT,CAAlB,CACNE,IADM,CACA,UAAAC,GAAG,EAAI;AACZL,IAAAA,QAAQ,CAACc,kBAAkB,CAACT,GAAG,CAACE,IAAL,EAAWF,GAAG,CAACG,IAAf,CAAnB,CAAR;AACD,GAHM,EAINC,KAJM,CAIA,UAAAC,GAAG,EAAI;AACZ,WAAOV,QAAQ,CAACe,iBAAiB,CAAC,KAAD,CAAlB,CAAf;AACD,GANM,CAAP;AAOD,C,CAED;;AACA,OAAO,SAASC,iBAAT,CAA2BhB,QAA3B,EAAqC;AAC1CA,EAAAA,QAAQ,CAACiB,sBAAsB,EAAvB,CAAR;AACD;;AAED,SAASd,YAAT,GAAwB;AACtB,SAAO;AACLe,IAAAA,IAAI,EAAE1B;AADD,GAAP;AAGD;;AAED,SAASc,iBAAT,CAA2Ba,OAA3B,EAAoCX,IAApC,EAA0C;AACxC,SAAO;AACLU,IAAAA,IAAI,EAAEzB,mBADD;AAELc,IAAAA,IAAI,EAAEY,OAFD;AAGLX,IAAAA,IAAI,EAACA;AAHA,GAAP;AAKD;;AAED,SAASG,gBAAT,GAA4B;AAC1B,SAAO;AACLO,IAAAA,IAAI,EAAExB;AADD,GAAP;AAGD;;AAED,SAASmB,aAAT,GAAyB;AACvB,SAAO;AACLK,IAAAA,IAAI,EAAEtB;AADD,GAAP;AAGD;;AAED,SAASkB,kBAAT,CAA4BK,OAA5B,EAAqCX,IAArC,EAA2C;AACzC,SAAO;AACLU,IAAAA,IAAI,EAAEpB,oBADD;AAELS,IAAAA,IAAI,EAAEY,OAFD;AAGLX,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD;;AAED,SAASO,iBAAT,GAA6B;AAC3B,SAAO;AACLG,IAAAA,IAAI,EAAErB;AADD,GAAP;AAGD;;AAED,SAASoB,sBAAT,CAAgCE,OAAhC,EAAyC;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAEvB,oBADD;AAELY,IAAAA,IAAI,EAAEY;AAFD,GAAP;AAID","sourcesContent":["import { servicesListFlight } from '../../services/webServices';\nimport { DO_LIST_FLIGHT, LIST_FLIGHT_SUCCESS, LIST_FLIGHT_FAILED , RESET_FLIGHT_SUCCESS, DO_LIST_FLIGHT1, LIST_FLIGHT_FAILED1, LIST_FLIGHT_SUCCESS1 } from '../../config/constant';\n\n//LOGIN ACTION\nexport function flightAction(dispatch, params, token) {\n  dispatch(doListFlight())\n  return servicesListFlight(params, token)\n  .then( res => {\n    dispatch(listFlightSuccess(res.data, res.meta));\n  })\n  .catch(err => {\n    return dispatch(listFlightFailed(false))\n  })\n}\n\nexport function flightAction1(dispatch, params, token) {\n  dispatch(doListFlight1())\n  return servicesListFlight(params, token)\n  .then( res => {\n    dispatch(listFlightSuccess1(res.data, res.meta));\n  })\n  .catch(err => {\n    return dispatch(listFlightFailed1(false))\n  })\n}\n\n//RESET LIST FLIGHT\nexport function resetFlightAction(dispatch) {\n  dispatch(resetListFlightSuccess());\n}\n\nfunction doListFlight() {\n  return {\n    type: DO_LIST_FLIGHT\n  }\n}\n\nfunction listFlightSuccess(payload, meta) {\n  return {\n    type: LIST_FLIGHT_SUCCESS,\n    data: payload,\n    meta:meta\n  }\n}\n\nfunction listFlightFailed() {\n  return {\n    type: LIST_FLIGHT_FAILED\n  }\n}\n\nfunction doListFlight1() {\n  return {\n    type: DO_LIST_FLIGHT1\n  }\n}\n\nfunction listFlightSuccess1(payload, meta) {\n  return {\n    type: LIST_FLIGHT_SUCCESS1,\n    data: payload,\n    meta: meta\n  }\n}\n\nfunction listFlightFailed1() {\n  return {\n    type: LIST_FLIGHT_FAILED1\n  }\n}\n\nfunction resetListFlightSuccess(payload) {\n  return {\n    type: RESET_FLIGHT_SUCCESS,\n    data: payload\n  }\n}"]},"metadata":{},"sourceType":"module"}