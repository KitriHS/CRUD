{"ast":null,"code":"var _this = this;\n\nimport { createUmrah, editUmrah, listUmrah, deleteUmrah } from '../../../services/webServices';\nimport { CREATE_UMRAH, CREATE_UMRAH_FAILED, CREATE_UMRAH_SUCCESS, LIST_UMRAH, LIST_UMRAH_FAILED, LIST_UMRAH_SUCCESS, DELETE_UMRAH, DELETE_UMRAH_FAILED, DELETE_UMRAH_SUCCESS } from './type';\nvar add = 'add';\nvar del = 'del';\n\nvar requestState = function requestState(type) {\n  if (type === add) {\n    return {\n      type: CREATE_UMRAH\n    };\n  } else if (type === del) {\n    return {\n      type: DELETE_UMRAH\n    };\n  } else {\n    return {\n      type: LIST_UMRAH\n    };\n  }\n};\n\nvar successState = function successState(type, data, message) {\n  if (type === add) {\n    return {\n      type: CREATE_UMRAH_SUCCESS,\n      data: data,\n      message: message\n    };\n  } else if (type === del) {\n    return {\n      type: DELETE_UMRAH_SUCCESS\n    };\n  } else {\n    return {\n      type: LIST_UMRAH_SUCCESS\n    };\n  }\n};\n\nvar failedState = function failedState(type) {\n  if (type === add) {\n    return {\n      type: CREATE_UMRAH_FAILED\n    };\n  } else if (type === del) {\n    return {\n      type: DELETE_UMRAH_FAILED\n    };\n  } else {\n    return {\n      type: LIST_UMRAH_FAILED\n    };\n  }\n};\n\nexport var _createUmrah = function _createUmrah(dispatch, payload, token, callback) {\n  dispatch(requestState(add));\n  return createUmrah(payload, token).then(function (res) {\n    callback.call(_this, res);\n  }).catch(function (err) {\n    return dispatch(failedState(add));\n  });\n};\nexport var _editUmrah = function _editUmrah(dispatch, payload, token, id, callback) {\n  dispatch(requestState(add));\n  return editUmrah(payload, token, id).then(function (res) {\n    callback.call(_this, res);\n  }).catch(function (err) {\n    return dispatch(failedState(add));\n  });\n};\nexport var _listUmrah = function _listUmrah(dispatch, id, callback) {\n  dispatch(requestState());\n  return listUmrah(id).then(function (res) {\n    dispatch(successState());\n    callback.call(_this, res);\n  }).catch(function (err) {\n    return dispatch(failedState());\n  });\n};\nexport var _deleteUmrah = function _deleteUmrah(dispatch, token, id, callback) {\n  dispatch(requestState(del));\n  return deleteUmrah(token, id).then(function (res) {\n    dispatch(successState(del));\n    callback.call(_this, res);\n  }).catch(function (err) {\n    return dispatch(failedState(del));\n  });\n};\nexport var clearErr = function clearErr(dispatch, payload, message) {\n  dispatch(successState(add, payload, message));\n};","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/umrah/redux/action.js"],"names":["createUmrah","editUmrah","listUmrah","deleteUmrah","CREATE_UMRAH","CREATE_UMRAH_FAILED","CREATE_UMRAH_SUCCESS","LIST_UMRAH","LIST_UMRAH_FAILED","LIST_UMRAH_SUCCESS","DELETE_UMRAH","DELETE_UMRAH_FAILED","DELETE_UMRAH_SUCCESS","add","del","requestState","type","successState","data","message","failedState","_createUmrah","dispatch","payload","token","callback","then","res","call","catch","err","_editUmrah","id","_listUmrah","_deleteUmrah","clearErr"],"mappings":"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","sourcesContent":["import { createUmrah, editUmrah, listUmrah, deleteUmrah } from '../../../services/webServices';\nimport {\n  CREATE_UMRAH,\n  CREATE_UMRAH_FAILED,\n  CREATE_UMRAH_SUCCESS,\n  LIST_UMRAH,\n  LIST_UMRAH_FAILED,\n  LIST_UMRAH_SUCCESS,\n  DELETE_UMRAH,\n  DELETE_UMRAH_FAILED,\n  DELETE_UMRAH_SUCCESS,\n} from './type';\n\nconst add = 'add';\nconst del = 'del';\n\nconst requestState = (type) => {\n  if (type === add) {\n    return {\n      type: CREATE_UMRAH\n    }\n  } else if (type === del) {\n    return {\n      type: DELETE_UMRAH\n    }\n  } else {\n    return {\n      type: LIST_UMRAH\n    }\n  }\n};\n\nconst successState = (type, data, message) => {\n  if (type === add) {\n    return {\n      type: CREATE_UMRAH_SUCCESS,\n      data,\n      message,\n    }\n  } else if (type === del) {\n    return {\n      type: DELETE_UMRAH_SUCCESS\n    }\n  } else {\n    return {\n      type: LIST_UMRAH_SUCCESS,\n    }\n  }\n};\n\nconst failedState = (type) => {\n  if (type === add) {\n    return {\n      type: CREATE_UMRAH_FAILED\n    }\n  } else if (type === del) {\n    return {\n      type: DELETE_UMRAH_FAILED\n    }\n  } else {\n    return {\n      type: LIST_UMRAH_FAILED\n    }\n  }\n}\n\nexport const _createUmrah = (dispatch, payload, token, callback) => {\n  dispatch(requestState(add));\n  return createUmrah(payload, token)\n    .then(res => {\n      callback.call(this, res);\n    })\n    .catch(err => {\n      return dispatch(failedState(add));\n    })\n}\nexport const _editUmrah = (dispatch, payload, token, id, callback) => {\n  dispatch(requestState(add));\n  return editUmrah(payload, token, id)\n    .then(res => {\n      callback.call(this, res);\n    })\n    .catch(err => {\n      return dispatch(failedState(add));\n    })\n}\nexport const _listUmrah = (dispatch, id, callback) => {\n  dispatch(requestState());\n  return listUmrah(id)\n    .then(res => {\n      dispatch(successState());\n      callback.call(this, res);\n    })\n    .catch(err => {\n      return dispatch(failedState());\n    })\n}\nexport const _deleteUmrah = (dispatch, token, id, callback) => {\n  dispatch(requestState(del));\n  return deleteUmrah(token, id)\n    .then(res => {\n      dispatch(successState(del));\n      callback.call(this, res);\n    })\n    .catch(err => {\n      return dispatch(failedState(del));\n    })\n}\nexport const clearErr = (dispatch, payload, message) => {\n  dispatch(successState(add, payload, message));\n}"]},"metadata":{},"sourceType":"module"}