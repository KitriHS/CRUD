{"ast":null,"code":"import { serviceOrder } from '../../services/webServices';\nimport { DO_ORDER, LIST_ORDER_SUCCESS, LIST_ORDER_FAILED, RESET_FLIGHT_SUCCESS, ORDER_EXPORT, ORDER_EXPORT_SUCCESS, ORDER_EXPORT_FAILED } from '../../config/constant'; //HOTEL ACTION\n\nexport function orderAction(dispatch, params, token) {\n  dispatch(doListHotel());\n  return serviceOrder(params, token).then(function (res) {\n    dispatch(listHotelSuccess(res.data, res.meta));\n  }).catch(function (err) {\n    return dispatch(listHotelFailed(false));\n  });\n}\n\nfunction doListHotel() {\n  return {\n    type: DO_ORDER\n  };\n}\n\nfunction listHotelSuccess(payload, meta) {\n  return {\n    type: LIST_ORDER_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction listHotelFailed() {\n  return {\n    type: LIST_ORDER_FAILED\n  };\n}\n\nexport function exportOrderAction(dispatch, params, token) {\n  dispatch(exportList());\n  return serviceOrder(params, token).then(function (res) {\n    dispatch(exportOrderSuccess(res.data, res.meta));\n  }).catch(function (err) {\n    return dispatch(exportOrderFailed(false));\n  });\n}\n\nfunction exportList() {\n  return {\n    type: ORDER_EXPORT\n  };\n}\n\nfunction exportOrderSuccess(payload, meta) {\n  return {\n    type: ORDER_EXPORT_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction exportOrderFailed() {\n  return {\n    type: ORDER_EXPORT_FAILED\n  };\n}\n\nexport function resetorderAction(dispatch) {\n  dispatch(resetHotelSuccess());\n}\n\nfunction resetHotelSuccess(payload) {\n  return {\n    type: RESET_FLIGHT_SUCCESS,\n    data: payload\n  };\n}","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/React/cmsasitaaja/src/pages/order/Action.js"],"names":["serviceOrder","DO_ORDER","LIST_ORDER_SUCCESS","LIST_ORDER_FAILED","RESET_FLIGHT_SUCCESS","ORDER_EXPORT","ORDER_EXPORT_SUCCESS","ORDER_EXPORT_FAILED","orderAction","dispatch","params","token","doListHotel","then","res","listHotelSuccess","data","meta","catch","err","listHotelFailed","type","payload","exportOrderAction","exportList","exportOrderSuccess","exportOrderFailed","resetorderAction","resetHotelSuccess"],"mappings":"AAAA,SAASA,YAAT,QAA6B,4BAA7B;AACA,SAASC,QAAT,EAAmBC,kBAAnB,EAAuCC,iBAAvC,EAA0DC,oBAA1D,EAAgFC,YAAhF,EAA8FC,oBAA9F,EAAoHC,mBAApH,QAA+I,uBAA/I,C,CAEA;;AACA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,KAAvC,EAA8C;AACnDF,EAAAA,QAAQ,CAACG,WAAW,EAAZ,CAAR;AACA,SAAOZ,YAAY,CAACU,MAAD,EAASC,KAAT,CAAZ,CACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACXL,IAAAA,QAAQ,CAACM,gBAAgB,CAACD,GAAG,CAACE,IAAL,EAAWF,GAAG,CAACG,IAAf,CAAjB,CAAR;AACD,GAHI,EAIJC,KAJI,CAIE,UAAAC,GAAG,EAAI;AACZ,WAAOV,QAAQ,CAACW,eAAe,CAAC,KAAD,CAAhB,CAAf;AACD,GANI,CAAP;AAOD;;AAED,SAASR,WAAT,GAAuB;AACrB,SAAO;AACLS,IAAAA,IAAI,EAAEpB;AADD,GAAP;AAGD;;AACD,SAASc,gBAAT,CAA0BO,OAA1B,EAAmCL,IAAnC,EAAyC;AACvC,SAAO;AACLI,IAAAA,IAAI,EAAEnB,kBADD;AAELc,IAAAA,IAAI,EAAEM,OAFD;AAGLL,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD;;AACD,SAASG,eAAT,GAA2B;AACzB,SAAO;AACLC,IAAAA,IAAI,EAAElB;AADD,GAAP;AAGD;;AACD,OAAO,SAASoB,iBAAT,CAA2Bd,QAA3B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoD;AACzDF,EAAAA,QAAQ,CAACe,UAAU,EAAX,CAAR;AACA,SAAOxB,YAAY,CAACU,MAAD,EAASC,KAAT,CAAZ,CACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACXL,IAAAA,QAAQ,CAACgB,kBAAkB,CAACX,GAAG,CAACE,IAAL,EAAWF,GAAG,CAACG,IAAf,CAAnB,CAAR;AACD,GAHI,EAIJC,KAJI,CAIE,UAAAC,GAAG,EAAI;AACZ,WAAOV,QAAQ,CAACiB,iBAAiB,CAAC,KAAD,CAAlB,CAAf;AACD,GANI,CAAP;AAOD;;AACD,SAASF,UAAT,GAAsB;AACpB,SAAO;AACLH,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD;;AACD,SAASoB,kBAAT,CAA4BH,OAA5B,EAAqCL,IAArC,EAA2C;AACzC,SAAO;AACLI,IAAAA,IAAI,EAAEf,oBADD;AAELU,IAAAA,IAAI,EAAEM,OAFD;AAGLL,IAAAA,IAAI,EAAEA;AAHD,GAAP;AAKD;;AACD,SAASS,iBAAT,GAA6B;AAC3B,SAAO;AACLL,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD;;AAED,OAAO,SAASoB,gBAAT,CAA0BlB,QAA1B,EAAoC;AACzCA,EAAAA,QAAQ,CAACmB,iBAAiB,EAAlB,CAAR;AACD;;AACD,SAASA,iBAAT,CAA2BN,OAA3B,EAAoC;AAClC,SAAO;AACLD,IAAAA,IAAI,EAAEjB,oBADD;AAELY,IAAAA,IAAI,EAAEM;AAFD,GAAP;AAKD","sourcesContent":["import { serviceOrder } from '../../services/webServices';\nimport { DO_ORDER, LIST_ORDER_SUCCESS, LIST_ORDER_FAILED, RESET_FLIGHT_SUCCESS, ORDER_EXPORT, ORDER_EXPORT_SUCCESS, ORDER_EXPORT_FAILED } from '../../config/constant';\n\n//HOTEL ACTION\nexport function orderAction(dispatch, params, token) {\n  dispatch(doListHotel())\n  return serviceOrder(params, token)\n    .then(res => {\n      dispatch(listHotelSuccess(res.data, res.meta));\n    })\n    .catch(err => {\n      return dispatch(listHotelFailed(false))\n    })\n}\n\nfunction doListHotel() {\n  return {\n    type: DO_ORDER\n  }\n}\nfunction listHotelSuccess(payload, meta) {\n  return {\n    type: LIST_ORDER_SUCCESS,\n    data: payload,\n    meta: meta\n  }\n}\nfunction listHotelFailed() {\n  return {\n    type: LIST_ORDER_FAILED\n  }\n}\nexport function exportOrderAction(dispatch, params, token) {\n  dispatch(exportList())\n  return serviceOrder(params, token)\n    .then(res => {\n      dispatch(exportOrderSuccess(res.data, res.meta));\n    })\n    .catch(err => {\n      return dispatch(exportOrderFailed(false))\n    })\n}\nfunction exportList() {\n  return {\n    type: ORDER_EXPORT\n  }\n}\nfunction exportOrderSuccess(payload, meta) {\n  return {\n    type: ORDER_EXPORT_SUCCESS,\n    data: payload,\n    meta: meta\n  }\n}\nfunction exportOrderFailed() {\n  return {\n    type: ORDER_EXPORT_FAILED\n  }\n}\n\nexport function resetorderAction(dispatch) {\n  dispatch(resetHotelSuccess())\n}\nfunction resetHotelSuccess(payload) {\n  return {\n    type: RESET_FLIGHT_SUCCESS,\n    data: payload\n\n  }\n}"]},"metadata":{},"sourceType":"module"}