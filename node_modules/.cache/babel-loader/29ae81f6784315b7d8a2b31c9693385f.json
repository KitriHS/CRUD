{"ast":null,"code":"import _defineProperty from \"/Users/sai04/Documents/Source/cmsaeroaja/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/sai04/Documents/Source/cmsaeroaja/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sai04/Documents/Source/cmsaeroaja/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sai04/Documents/Source/cmsaeroaja/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sai04/Documents/Source/cmsaeroaja/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sai04/Documents/Source/cmsaeroaja/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sai04/Documents/Source/cmsaeroaja/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sai04/Documents/Source/cmsaeroaja/src/pages/dashboard/Component.js\";\nimport React from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport DropdownData from \"./component/dropdown\";\nimport DiagramTotal from \"./component/diagram-total\";\nimport Tabs from \"../../component/tabs\";\nimport moment from \"moment\";\nimport './styles.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SubHeader from '../../component/sub-header';\nimport Loading from '../../component/Loading/index';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Dashboard, _React$PureComponent);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this.state = {\n      titleChart: 'Chart Domestic',\n      startDate: moment().add('days', -30).format('YYYY-MM-DD'),\n      endDate: moment().add('days').format('YYYY-MM-DD'),\n      selectRoute: '',\n      selectPriode: new Date(),\n      selectAirline: '',\n      departureDate: moment(),\n      departureDateValue: moment().format('YYYY-MM-DD'),\n      endDateValue: \"\",\n      product: '',\n      productValue: '',\n      selectedDataAirline: 'Flight',\n      selectedDataRoute: 'Flight',\n      selectFilter: ''\n    };\n    _this.handleDateStart = _this.handleDateStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDateEnd = _this.handleDateEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.handleLoadDataChart();\n    }\n  }, {\n    key: \"handleDateStart\",\n    value: function handleDateStart(date) {\n      var startDate = moment(date).format('YYYY-MM-DD');\n      var endDate = moment(startDate).add(1, 'days');\n      var endDateFormat = moment(endDate).format('YYYY-MM-DD');\n      this.setState({\n        startDate: date,\n        startDateValue: startDate,\n        endDate: endDate,\n        endDateValue: this.state.isRoundTrip ? endDateFormat : \"\"\n      });\n    }\n  }, {\n    key: \"handleDateEnd\",\n    value: function handleDateEnd(date) {\n      var endDateFormat = moment(date).format('YYYY-MM-DD');\n      this.setState({\n        endDate: date,\n        endDateValue: endDateFormat\n      });\n    }\n  }, {\n    key: \"handleSelectDropDown\",\n    value: function handleSelectDropDown(selectProduct) {\n      this.setState({\n        selectedProduct: selectProduct\n      });\n    }\n  }, {\n    key: \"handleSelectDate\",\n    value: function handleSelectDate(field, value) {\n      this.setState(_defineProperty({}, field, moment(value).format('YYYY-MM-DD')));\n    }\n  }, {\n    key: \"callbackSubmit\",\n    value: function callbackSubmit(callback) {\n      if (callback.success) {\n        this.handleSetTitleSubmit();\n      }\n    }\n  }, {\n    key: \"handleSetTitleSubmit\",\n    value: function handleSetTitleSubmit() {\n      var _this$state = this.state,\n          titleChart = _this$state.titleChart,\n          selectRoute = _this$state.selectRoute;\n\n      if (selectRoute.toLowerCase() == 'international') {\n        this.setState({\n          titleChart: 'Chart International'\n        });\n      } else {\n        this.setState({\n          titleChart: 'Chart Domestic'\n        });\n      }\n    }\n  }, {\n    key: \"handleLoadDataChart\",\n    value: function handleLoadDataChart() {\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          dispatch = _this$props.dispatch;\n      var _this$state2 = this.state,\n          startDate = _this$state2.startDate,\n          endDate = _this$state2.endDate,\n          selectAirline = _this$state2.selectAirline,\n          selectRoute = _this$state2.selectRoute,\n          selectFilter = _this$state2.selectFilter;\n      var params = {\n        q: '',\n        start_date: startDate,\n        end_date: endDate,\n        airline: !selectAirline ? '' : selectAirline.toLowerCase(),\n        routes: !selectRoute ? 'domestic' : selectRoute.toLowerCase(),\n        status: selectFilter\n      };\n      var token = !this.props.login.token ? '' : this.props.login.token;\n      actions.loadDataChartDashboard(dispatch, params, token, this.callbackSubmit.bind(this));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      this.handleLoadDataChart();\n    }\n  }, {\n    key: \"handleSelectAirline\",\n    value: function handleSelectAirline(value) {\n      this.setState({\n        selectAirline: value\n      });\n    }\n  }, {\n    key: \"handleSelectRoute\",\n    value: function handleSelectRoute(value) {\n      this.setState({\n        selectRoute: value\n      });\n    }\n  }, {\n    key: \"hedleSelectFilter\",\n    value: function hedleSelectFilter(value) {\n      this.setState({\n        selectFilter: value\n      });\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      return React.createElement(\"div\", {\n        className: \"box-loading\",\n        style: {\n          marginTop: 50,\n          marginBottom: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        type: \"PulseLoader\",\n        loading: true,\n        color: '#0290d2',\n        size: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dataMountSales = {\n        datasets: [{\n          data: [],\n          backgroundColor: [\"#a3195b\", '#0290d2', \"#02d002\", '#FF9933', '#FF00FF', '#FF0000', '6600FF']\n        }],\n        labels: ['', '', '', '', '', '', '', '', '', '', '']\n      };\n      var _this$state3 = this.state,\n          startDate = _this$state3.startDate,\n          endDate = _this$state3.endDate,\n          selectAirline = _this$state3.selectAirline,\n          selectRoute = _this$state3.selectRoute,\n          titleChart = _this$state3.titleChart,\n          selectFilter = _this$state3.selectFilter;\n\n      var _dataChartDasboard = this.props.dashboard.dataChartDashboard != null ? this.props.dashboard.dataChartDashboard.content : null;\n\n      console.log(_dataChartDasboard, 'Data Dashboard');\n      var fetchingDataChartDashboard = this.props.dashboard.fetchingDataChartDashboard;\n\n      if (_dataChartDasboard == null) {\n        dataMountSales.datasets[0].data = [];\n      } else {\n        var dataMerge = {\n          domestic: [],\n          international: null\n        };\n        var mergeName = 'GA';\n        var mergeTotalTrans = 0;\n        var mergeAmountTrans = 0; // const zeroArray = new Array(0);\n        // let data_dashboard = _dataChartDasboard !== null ? _dataChartDasboard.domestic : null;\n        // var i=0\n        // for(i=0;i<data_dashboard;i++) {\n        //   if (\n        //     _dataChartDasboard.domestic[i].airline_name.toUpperCase()==\"GA\" ||\n        //     _dataChartDasboard.domestic[i].airline_name.toUpperCase()==\"GARUDA INDONESIA\" ||\n        //     _dataChartDasboard.domestic[i].airline_name.toUpperCase()== \"\"\n        //   ){\n        //     mergeTotalTrans += _dataChartDasboard.domestic[i].total_transaction;\n        //     mergeAmountTrans += _dataChartDasboard.domestic[i].amount_transaction;\n        //   }else {\n        //     dataMerge.domestic.push({\n        //       airline_name: _dataChartDasboard.domestic[i].airline_name,\n        //       amount_transaction: _dataChartDasboard.domestic[i].amount_transaction,\n        //       total_transaction: _dataChartDasboard.domestic[i].total_transaction\n        //     });\n        //   }\n        // }\n\n        if (_dataChartDasboard.domestic != null) {\n          for (var i = 0; i < _dataChartDasboard.domestic.length; i++) {\n            if (_dataChartDasboard.domestic[i].airline_name.toUpperCase() == \"GA\" || _dataChartDasboard.domestic[i].airline_name.toUpperCase() == \"GARUDA INDONESIA\" || _dataChartDasboard.domestic[i].airline_name.toUpperCase() == \"\") {\n              mergeTotalTrans += _dataChartDasboard.domestic[i].total_transaction;\n              mergeAmountTrans += _dataChartDasboard.domestic[i].amount_transaction;\n            } else {\n              dataMerge.domestic.push({\n                airline_name: _dataChartDasboard.domestic[i].airline_name,\n                amount_transaction: _dataChartDasboard.domestic[i].amount_transaction,\n                total_transaction: _dataChartDasboard.domestic[i].total_transaction\n              });\n            }\n          }\n        }\n\n        if (dataMerge.domestic != null) {\n          dataMerge.domestic.push({\n            airline_name: mergeName,\n            amount_transaction: mergeAmountTrans,\n            total_transaction: mergeAmountTrans\n          });\n        }\n\n        if (selectRoute.toLowerCase() == 'international') {\n          if (dataMerge.international == null) {\n            dataMountSales.datasets[0].data = [];\n          } else {\n            dataMerge.international.map(function (flight, i) {\n              dataMountSales.datasets[0].data.push(flight.amount_transaction);\n              dataMountSales.labels[i] = flight.airline_name;\n            });\n          }\n        } else {\n          if (dataMerge.domestic == null) {\n            dataMountSales.datasets[0].data = [];\n          } else {\n            dataMerge.domestic.map(function (flight, i) {\n              dataMountSales.datasets[0].data.push(flight.amount_transaction);\n              dataMountSales.labels[i] = flight.airline_name;\n            });\n          }\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"section-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"search-flight-heading\",\n        style: {\n          paddingBottom: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \" Dashboard\"), React.createElement(Row, {\n        className: \"step-form-table\",\n        style: {\n          marginBottom: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(SubHeader, {\n        title: \"Diagram Reporting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(Row, {\n        style: {\n          marginTop: 50,\n          marginBottom: 15,\n          marginLeft: 20,\n          marginRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: moment(startDate),\n        onChange: function onChange(e) {\n          return _this2.handleSelectDate('startDate', e);\n        },\n        style: {\n          padding: 20\n        },\n        placeholderText: \"DD/MM/YYYY\",\n        dateFormat: \"DD/MM/YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        size: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"End Date\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: moment(endDate),\n        onChange: function onChange(e) {\n          return _this2.handleSelectDate('endDate', e);\n        },\n        style: {\n          padding: 20\n        },\n        placeholderText: \"DD/MM/YYYY\",\n        dateFormat: \"DD/MM/YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        size: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Airline\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(DropdownData, {\n        handleSelect: this.handleSelectAirline.bind(this),\n        selected: selectAirline,\n        selectAirline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        style: {\n          marginBottom: 60,\n          marginLeft: 15,\n          marginRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Route\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(DropdownData, {\n        handleSelect: this.handleSelectRoute.bind(this),\n        selected: selectRoute,\n        dataRoute: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        size: 3,\n        style: {\n          marginLeft: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Filter Data\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(DropdownData, {\n        handleSelect: this.hedleSelectFilter.bind(this),\n        selected: selectFilter,\n        filterData: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        size: 3,\n        style: {\n          marginLeft: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginTop: 22\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button-primary\",\n        style: {\n          width: '55%',\n          padding: 8,\n          paddingLeft: 8\n        },\n        onClick: function onClick() {\n          return _this2.handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Submit\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: 2,\n        style: {\n          marginLeft: 20,\n          marginRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        style: {\n          fontSize: 18,\n          marginLeft: 10,\n          color: '#222222'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, titleChart))), React.createElement(Row, {\n        style: {\n          marginBottom: 10,\n          marginLeft: 25,\n          marginRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, fetchingDataChartDashboard ? this.renderLoading() : React.createElement(DiagramTotal, {\n        mountReport: dataMountSales,\n        totalSales: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.PureComponent);\n\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/sai04/Documents/Source/cmsaeroaja/src/pages/dashboard/Component.js"],"names":["React","Row","Col","Button","DropdownData","DiagramTotal","Tabs","moment","DatePicker","SubHeader","Loading","Dashboard","props","state","titleChart","startDate","add","format","endDate","selectRoute","selectPriode","Date","selectAirline","departureDate","departureDateValue","endDateValue","product","productValue","selectedDataAirline","selectedDataRoute","selectFilter","handleDateStart","bind","handleDateEnd","handleLoadDataChart","date","endDateFormat","setState","startDateValue","isRoundTrip","selectProduct","selectedProduct","field","value","callback","success","handleSetTitleSubmit","toLowerCase","actions","dispatch","params","q","start_date","end_date","airline","routes","status","token","login","loadDataChartDashboard","callbackSubmit","marginTop","marginBottom","dataMountSales","datasets","data","backgroundColor","labels","_dataChartDasboard","dashboard","dataChartDashboard","content","console","log","fetchingDataChartDashboard","dataMerge","domestic","international","mergeName","mergeTotalTrans","mergeAmountTrans","i","length","airline_name","toUpperCase","total_transaction","amount_transaction","push","map","flight","paddingBottom","width","marginLeft","marginRight","e","handleSelectDate","padding","handleSelectAirline","handleSelectRoute","hedleSelectFilter","paddingLeft","handleSubmit","fontSize","color","renderLoading","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport DropdownData from \"./component/dropdown\";\nimport DiagramTotal from \"./component/diagram-total\";\nimport Tabs from \"../../component/tabs\";\nimport moment from \"moment\";\nimport './styles.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SubHeader from '../../component/sub-header';\nimport Loading from '../../component/Loading/index';\n\n\nexport default class Dashboard extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleChart:'Chart Domestic',\n      startDate:moment().add('days',-30).format('YYYY-MM-DD'),\n      endDate:moment().add('days').format('YYYY-MM-DD'),\n      selectRoute:'',\n      selectPriode:new Date(),\n      selectAirline:'',\n      departureDate: moment(),\n      departureDateValue: moment().format('YYYY-MM-DD'),\n      endDateValue: \"\",\n      product: '',\n      productValue:'',\n      selectedDataAirline:'Flight',\n      selectedDataRoute:'Flight',\n      selectFilter: ''\n    };\n    this.handleDateStart = this.handleDateStart.bind(this);\n    this.handleDateEnd = this.handleDateEnd.bind(this);\n  }\n\n  componentWillMount() {\n    this.handleLoadDataChart();\n  }\n\n  handleDateStart(date) {\n    let startDate = moment(date).format('YYYY-MM-DD');\n    let endDate = moment(startDate).add(1,'days');\n    let endDateFormat = moment(endDate).format('YYYY-MM-DD');\n\n    this.setState({\n      startDate: date,\n      startDateValue: startDate,\n      endDate: endDate,\n      endDateValue: (this.state.isRoundTrip) ? endDateFormat : \"\"\n    });\n  }\n\n  handleDateEnd(date) {\n    let endDateFormat = moment(date).format('YYYY-MM-DD');\n    this.setState({\n      endDate: date,\n      endDateValue: endDateFormat\n    });\n  }\n\n  handleSelectDropDown(selectProduct) {\n    this.setState({selectedProduct:selectProduct })\n  }\n\n  handleSelectDate(field, value){\n    this.setState({[field]:moment(value).format('YYYY-MM-DD')});\n  }\n  callbackSubmit(callback){\n    if (callback.success){\n      this.handleSetTitleSubmit();\n    }\n  }\n\n  handleSetTitleSubmit(){\n    let { titleChart, selectRoute } = this.state;\n    if (selectRoute.toLowerCase()=='international'){\n        this.setState({titleChart : 'Chart International'});\n    } else {\n      this.setState({titleChart : 'Chart Domestic'});\n    }\n  }\n  handleLoadDataChart(){\n    const { actions, dispatch } = this.props;\n    const {startDate , endDate, selectAirline, selectRoute, selectFilter } = this.state;\n    let params = \n    {\n      q:'',\n      start_date: startDate,\n      end_date: endDate,\n      airline: !selectAirline ? '' :selectAirline.toLowerCase(),\n      routes: !selectRoute ? 'domestic' :selectRoute.toLowerCase(),\n      status: selectFilter\n    }\n    let token = !this.props.login.token ? '' : this.props.login.token;\n    actions.loadDataChartDashboard(dispatch, params, token,this.callbackSubmit.bind(this));\n  }\n  handleSubmit(){\n    this.handleLoadDataChart();\n  }\n  handleSelectAirline(value){\n    this.setState({selectAirline:value});\n  }\n  handleSelectRoute(value){\n    this.setState({selectRoute:value});\n  }\n  hedleSelectFilter(value){\n    this.setState({selectFilter: value})\n  }\n  renderLoading(){\n    return(\n      <div className=\"box-loading\" style={{marginTop: 50, marginBottom:50}}>\n        <Loading\n          type=\"PulseLoader\"\n          loading={true}\n          color={'#0290d2'}\n          size={25}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const dataMountSales = {\n      datasets: [\n        { \n          data: [],\n          backgroundColor: [\"#a3195b\", '#0290d2', \"#02d002\",'#FF9933','#FF00FF','#FF0000', '6600FF' ]\n        }\n      ],\n      labels: ['','','','','','','','','','','']\n    };\n  \n    const {startDate, endDate, selectAirline, selectRoute, titleChart, selectFilter} = this.state;\n    let _dataChartDasboard = this.props.dashboard.dataChartDashboard!=null ? this.props.dashboard.dataChartDashboard.content: null;\n    console.log(_dataChartDasboard, 'Data Dashboard')\n    const { fetchingDataChartDashboard } = this.props.dashboard;\n    if (_dataChartDasboard == null){\n      dataMountSales.datasets[0].data=[];\n    }else {\n      var dataMerge = {domestic:[], international:null};\n      let mergeName        = 'GA';\n      let mergeTotalTrans  = 0;\n      let mergeAmountTrans = 0;\n      // const zeroArray = new Array(0);\n      // let data_dashboard = _dataChartDasboard !== null ? _dataChartDasboard.domestic : null;\n      // var i=0\n      // for(i=0;i<data_dashboard;i++) {\n      //   if (\n      //     _dataChartDasboard.domestic[i].airline_name.toUpperCase()==\"GA\" ||\n      //     _dataChartDasboard.domestic[i].airline_name.toUpperCase()==\"GARUDA INDONESIA\" ||\n      //     _dataChartDasboard.domestic[i].airline_name.toUpperCase()== \"\"\n      //   ){\n      //     mergeTotalTrans += _dataChartDasboard.domestic[i].total_transaction;\n      //     mergeAmountTrans += _dataChartDasboard.domestic[i].amount_transaction;\n      //   }else {\n      //     dataMerge.domestic.push({\n      //       airline_name: _dataChartDasboard.domestic[i].airline_name,\n      //       amount_transaction: _dataChartDasboard.domestic[i].amount_transaction,\n      //       total_transaction: _dataChartDasboard.domestic[i].total_transaction\n      //     });\n      //   }\n      // }\n\n      if(_dataChartDasboard.domestic!=null){\n        for (var i=0;i<_dataChartDasboard.domestic.length;i++){\n          if (\n            _dataChartDasboard.domestic[i].airline_name.toUpperCase()==\"GA\" ||\n            _dataChartDasboard.domestic[i].airline_name.toUpperCase()==\"GARUDA INDONESIA\" ||\n            _dataChartDasboard.domestic[i].airline_name.toUpperCase()== \"\"\n          ){\n            mergeTotalTrans += _dataChartDasboard.domestic[i].total_transaction;\n            mergeAmountTrans += _dataChartDasboard.domestic[i].amount_transaction;\n          }else {\n            dataMerge.domestic.push({\n              airline_name: _dataChartDasboard.domestic[i].airline_name,\n              amount_transaction: _dataChartDasboard.domestic[i].amount_transaction,\n              total_transaction: _dataChartDasboard.domestic[i].total_transaction\n            });\n          }\n        }\n      }\n      \n      if (dataMerge.domestic!=null){\n        dataMerge.domestic.push({\n          airline_name: mergeName,\n          amount_transaction: mergeAmountTrans,\n          total_transaction: mergeAmountTrans\n        });\n      }\n      if (selectRoute.toLowerCase()=='international'){\n        if (dataMerge.international==null){\n          dataMountSales.datasets[0].data=[];\n        }else {\n          dataMerge.international.map((flight,i)=>{\n            dataMountSales.datasets[0].data.push(flight.amount_transaction);\n            dataMountSales.labels[i]=flight.airline_name;\n          });\n        }\n      }else {\n        if (dataMerge.domestic==null){\n          dataMountSales.datasets[0].data=[];\n        }else {\n          dataMerge.domestic.map((flight,i)=>{\n            dataMountSales.datasets[0].data.push(flight.amount_transaction);\n            dataMountSales.labels[i]=flight.airline_name;\n          });\n        }\n      }\n    }\n    return (\n      <div className=\"section-search\">\n        <Row className=\"search-flight-heading\" style={{ paddingBottom: \"40px\" }}> Dashboard</Row>\n        <Row className=\"step-form-table\" style={{ marginBottom: 40 }}>\n          <div style={{ width: \"100%\" }}>\n            <SubHeader title={\"Diagram Reporting\"} />\n            <Row style={{marginTop: 50, marginBottom:15, marginLeft:20, marginRight:20}}>\n              <Col size={3}>\n                <div>Start Date</div>\n                <div>\n                  <DatePicker  \n                    selected={moment(startDate)}\n                    onChange={(e)=>this.handleSelectDate('startDate', e)}\n                    style={{ padding: 20 }}\n                    placeholderText=\"DD/MM/YYYY\"\n                    dateFormat=\"DD/MM/YYYY\"\n                  />\n                </div>\n              </Col>\n              <Col size={3}>\n                <div>End Date</div>\n                <div>\n                  <DatePicker  \n                    selected={moment(endDate)}\n                    onChange={(e)=>this.handleSelectDate('endDate', e)}\n                    style={{ padding: 20 }}\n                    placeholderText=\"DD/MM/YYYY\"\n                    dateFormat=\"DD/MM/YYYY\"\n                  />\n                </div>\n              </Col>\n              <Col size={3}>\n                <div style={{marginLeft:10}}>Airline</div>\n                <div><DropdownData handleSelect={this.handleSelectAirline.bind(this)} selected={selectAirline} selectAirline={true}  /></div>\n              </Col>\n              {/* <Col size={2}>\n                <div style={{marginTop:22}}>\n                  <Button className=\"button-primary\" style={{width:'90%',padding:8}}  onClick={()=>this.handleSubmit()}>\n                    Submit\n                  </Button>\n                </div>\n              </Col> */}\n              {/* <Col size={2}>\n                <div style={{marginLeft:2}}>Origin</div>\n                <div className=\"box-input-search\">\n                  <input value={this.state.searchOrigin} placeholder={\"Search Origin\"} onChange={(e)=>this.handleChangeSearch(e.target.value)} className=\"input-search-dashboard\"/>\n                </div>\n              </Col> */}\n            </Row>\n            <Row style={{marginBottom:60, marginLeft:15, marginRight:20}}>\n              <Col size={3}>\n                <div style={{marginLeft:10}}>Route</div>\n                <div><DropdownData handleSelect={this.handleSelectRoute.bind(this)} selected={selectRoute} dataRoute={true} /></div>\n              </Col>\n              <Col size={3} style={{marginLeft: 15}}>\n                <div style={{marginBottom: 5}}>Filter Data</div>\n                <div><DropdownData handleSelect={this.hedleSelectFilter.bind(this)} selected={selectFilter} filterData={true} /></div>\n              </Col>\n              <Col size={3} style={{marginLeft: 15}}>\n                <div style={{marginTop:22}}>\n                  <Button className=\"button-primary\" style={{width:'55%',padding:8, paddingLeft:8}}  onClick={()=>this.handleSubmit()}>\n                    Submit\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col size={2} style={{marginLeft:20, marginRight:20}}><b style={{fontSize:18, marginLeft:10, color: '#222222'}}>{titleChart}</b></Col>\n            </Row>\n            <Row style={{ marginBottom:10, marginLeft:25, marginRight:25 }}>\n              { fetchingDataChartDashboard ? \n                this.renderLoading():\n                <DiagramTotal mountReport={dataMountSales} totalSales={false} />\n              }\n            </Row>\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}