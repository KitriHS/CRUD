{"ast":null,"code":"import { servicesUser, deleteUser, editUser } from \"./../../services/webServices\";\nimport { DO_EDIT_USER, EDIT_USER_SUCCESS, EDIT_USER_FAILED, DO_LIST_USER, LIST_USER_SUCCESS, LIST_USER_FAILED, RESET_USER_SUCCESS, DO_DELETE_USER, DELETE_USER_SUCCESS, DELETE_USER_FAILED } from \"./../../config/constant\"; // USER ACTION\n\nexport function userAction(dispatch, params, token) {\n  dispatch(doUser());\n  return servicesUser(params, token).then(function (res) {\n    setTimeout(function () {\n      dispatch(userSuccess(res.data, res.meta));\n    }, 3000);\n  }).catch(function () {\n    return dispatch(userFailed(false));\n  });\n} // USER ACTION\n//RESET LIST USER\n\nexport function resetUserAction(dispatch) {\n  dispatch(resetListUserSuccess());\n}\n\nfunction doUser() {\n  return {\n    type: DO_LIST_USER\n  };\n}\n\nfunction userSuccess(payload, meta) {\n  return {\n    type: LIST_USER_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction userFailed() {\n  return {\n    type: LIST_USER_FAILED\n  };\n}\n\nfunction resetListUserSuccess(payload) {\n  return {\n    type: RESET_USER_SUCCESS,\n    data: payload\n  };\n} //RESET LIST USER\n//DELETE USER\n\n\nexport function userDelete(dispatch, params, token, callback) {\n  var _this = this;\n\n  dispatch(doDelete());\n  return deleteUser(params.id, token).then(function (res) {\n    dispatch(deleteSuccess(res));\n    callback.call(_this, res);\n  }).catch(function () {\n    return dispatch(deleteFailed(false));\n  });\n}\n\nfunction doDelete() {\n  return {\n    type: DO_DELETE_USER\n  };\n}\n\nfunction deleteSuccess(payload) {\n  return {\n    type: DELETE_USER_SUCCESS,\n    data: payload\n  };\n}\n\nfunction deleteFailed() {\n  return {\n    type: DELETE_USER_FAILED\n  };\n} //DELETE USER\n//EDIT USER\n// export function userEditAction(dispatch,id, data, token , callback) {\n//   dispatch(doEdit());\n//   return editUser(id, data, token)\n//     .then(res => {\n//       dispatch(editSuccess(res));\n//       callback.call(this,res.data);\n//     })\n//     .catch((e) => {\n//       return dispatch(editFailed(false));\n//     });\n// }\n\n\nexport function userEditAction(dispatch, id, data, token, callback) {\n  var _this2 = this;\n\n  dispatch(doEdit());\n  return editUser(id, data, token).then(function (res) {\n    dispatch(editSuccess(res));\n    callback.call(_this2, res);\n  }).catch(function () {\n    return dispatch(editFailed(false));\n  });\n}\n\nfunction doEdit(payload) {\n  return {\n    type: DO_EDIT_USER,\n    data: payload\n  };\n}\n\nfunction editSuccess(payload) {\n  return {\n    type: EDIT_USER_SUCCESS,\n    data: payload\n  };\n}\n\nfunction editFailed() {\n  return {\n    type: EDIT_USER_FAILED\n  };\n} //EDIT USER","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/projects/cmsasitaaja/src/pages/user/Action.js"],"names":["servicesUser","deleteUser","editUser","DO_EDIT_USER","EDIT_USER_SUCCESS","EDIT_USER_FAILED","DO_LIST_USER","LIST_USER_SUCCESS","LIST_USER_FAILED","RESET_USER_SUCCESS","DO_DELETE_USER","DELETE_USER_SUCCESS","DELETE_USER_FAILED","userAction","dispatch","params","token","doUser","then","res","setTimeout","userSuccess","data","meta","catch","userFailed","resetUserAction","resetListUserSuccess","type","payload","userDelete","callback","doDelete","id","deleteSuccess","call","deleteFailed","userEditAction","doEdit","editSuccess","editFailed"],"mappings":"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","sourcesContent":["import { servicesUser, deleteUser, editUser } from \"./../../services/webServices\";\nimport { DO_EDIT_USER, EDIT_USER_SUCCESS, EDIT_USER_FAILED, DO_LIST_USER, LIST_USER_SUCCESS, LIST_USER_FAILED, RESET_USER_SUCCESS, DO_DELETE_USER, DELETE_USER_SUCCESS, DELETE_USER_FAILED } from \"./../../config/constant\";\n\n// USER ACTION\nexport function userAction(dispatch, params, token) {\n  dispatch(doUser());\n  return servicesUser(params, token)\n    .then(res => {\n      setTimeout(() => {\n        dispatch(userSuccess(res.data, res.meta));\n      }, 3000);\n    })\n    .catch(() => {\n      return dispatch(userFailed(false));\n    });\n}\n// USER ACTION\n\n//RESET LIST USER\nexport function resetUserAction(dispatch) {\n  dispatch(resetListUserSuccess())\n}\n\nfunction doUser() {\n  return {\n    type: DO_LIST_USER,\n  };\n}\n\nfunction userSuccess(payload, meta) {\n  return {\n    type: LIST_USER_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction userFailed() {\n  return {\n    type: LIST_USER_FAILED\n  };\n}\n\nfunction resetListUserSuccess(payload) {\n  return {\n    type: RESET_USER_SUCCESS,\n    data: payload\n  }\n}\n//RESET LIST USER\n\n//DELETE USER\nexport function userDelete(dispatch, params, token, callback) {\n  dispatch(doDelete());\n  return deleteUser(params.id, token)\n    .then(res => {\n      dispatch(deleteSuccess(res));\n      callback.call(this, res);\n    })\n    .catch(() => {\n      return dispatch(deleteFailed(false));\n    });\n}\n\nfunction doDelete() {\n  return {\n    type: DO_DELETE_USER,\n  };\n}\n\nfunction deleteSuccess(payload) {\n  return {\n    type: DELETE_USER_SUCCESS,\n    data: payload,\n  };\n}\n\nfunction deleteFailed() {\n  return {\n    type: DELETE_USER_FAILED\n  };\n}\n//DELETE USER\n\n//EDIT USER\n// export function userEditAction(dispatch,id, data, token , callback) {\n//   dispatch(doEdit());\n//   return editUser(id, data, token)\n//     .then(res => {\n//       dispatch(editSuccess(res));\n//       callback.call(this,res.data);\n//     })\n//     .catch((e) => {\n//       return dispatch(editFailed(false));\n//     });\n// }\nexport function userEditAction(dispatch, id, data, token, callback) {\n  dispatch(doEdit());\n  return editUser(id, data, token)\n    .then(res => {\n      dispatch(editSuccess(res));\n      callback.call(this, res);\n    })\n    .catch(() => {\n      return dispatch(editFailed(false));\n    });\n}\n\nfunction doEdit(payload) {\n  return {\n    type: DO_EDIT_USER,\n    data: payload\n  };\n}\n\nfunction editSuccess(payload) {\n  return {\n    type: EDIT_USER_SUCCESS,\n    data: payload\n  }\n}\n\nfunction editFailed() {\n  return {\n    type: EDIT_USER_FAILED\n  }\n}\n//EDIT USER\n\n\n\n"]},"metadata":{},"sourceType":"module"}