{"ast":null,"code":"import _objectSpread from \"/Users/kitrihapsari/Documents/projects/cmsasitaaja/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { DO_LOAD_DASHBOARD, LOAD_DASHBOARD_SUCCESS, LOAD_DASHBOARD_FAILED, DO_LOAD_DATA_CHART_DASHBOARD, LOAD_DATA_CHART_DASHBOARD_SUCCESS, LOAD_DATA_CHART_DASHBOARD_FAILED, DO_LOAD_ALL_DASHBOARD, LOAD_ALL_DASHBOARD_SUCCESS, LOAD_ALL_DASHBOARD_FAILED } from '../../config/constant';\nvar INITIAL_STATE = {\n  fetchingDataDashboard: false,\n  fetchingAllDataDashboard: false,\n  fetchingDataChartDashboard: false,\n  dataDashboard: [],\n  dataAllDashboard: [],\n  dataChartDashboard: null,\n  meta: null\n};\nexport default function dataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DO_LOAD_DASHBOARD:\n      {\n        return _objectSpread({}, state, {\n          fetchingDataDashboard: true\n        });\n      }\n\n    case LOAD_DASHBOARD_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          fetchingDataDashboard: false,\n          dataDashboard: action.data,\n          meta: action.meta\n        });\n      }\n\n    case LOAD_DASHBOARD_FAILED:\n      {\n        return _objectSpread({}, state, {\n          fetchingDataDashboard: false\n        });\n      }\n\n    case DO_LOAD_ALL_DASHBOARD:\n      {\n        return _objectSpread({}, state, {\n          fetchingAllDataDashboard: true\n        });\n      }\n\n    case LOAD_ALL_DASHBOARD_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          fetchingAllDataDashboard: false,\n          dataAllDashboard: action.data,\n          meta: action.meta\n        });\n      }\n\n    case LOAD_ALL_DASHBOARD_FAILED:\n      {\n        return _objectSpread({}, state, {\n          fetchingAllDataDashboard: false\n        });\n      }\n\n    case DO_LOAD_DATA_CHART_DASHBOARD:\n      {\n        return _objectSpread({}, state, {\n          fetchingDataChartDashboard: true\n        });\n      }\n\n    case LOAD_DATA_CHART_DASHBOARD_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          fetchingDataChartDashboard: false,\n          dataChartDashboard: action.data,\n          meta: action.meta\n        });\n      }\n\n    case LOAD_DATA_CHART_DASHBOARD_FAILED:\n      {\n        return _objectSpread({}, state, {\n          fetchingDataChartDashboard: false\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kitrihapsari/Documents/projects/cmsasitaaja/src/pages/dashboard/Reducer.js"],"names":["DO_LOAD_DASHBOARD","LOAD_DASHBOARD_SUCCESS","LOAD_DASHBOARD_FAILED","DO_LOAD_DATA_CHART_DASHBOARD","LOAD_DATA_CHART_DASHBOARD_SUCCESS","LOAD_DATA_CHART_DASHBOARD_FAILED","DO_LOAD_ALL_DASHBOARD","LOAD_ALL_DASHBOARD_SUCCESS","LOAD_ALL_DASHBOARD_FAILED","INITIAL_STATE","fetchingDataDashboard","fetchingAllDataDashboard","fetchingDataChartDashboard","dataDashboard","dataAllDashboard","dataChartDashboard","meta","dataReducer","state","action","type","data"],"mappings":";AAAA,SAASA,iBAAT,EAA4BC,sBAA5B,EAAoDC,qBAApD,EACEC,4BADF,EACgCC,iCADhC,EACmEC,gCADnE,EAEEC,qBAFF,EAEyBC,0BAFzB,EAEqDC,yBAFrD,QAGO,uBAHP;AAKA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,qBAAqB,EAAE,KADH;AAEpBC,EAAAA,wBAAwB,EAAC,KAFL;AAGpBC,EAAAA,0BAA0B,EAAC,KAHP;AAIpBC,EAAAA,aAAa,EAAG,EAJI;AAKpBC,EAAAA,gBAAgB,EAAC,EALG;AAMpBC,EAAAA,kBAAkB,EAAC,IANC;AAOpBC,EAAAA,IAAI,EAAC;AAPe,CAAtB;AAUA,eAAe,SAASC,WAAT,GAAoD;AAAA,MAA/BC,KAA+B,uEAAvBT,aAAuB;AAAA,MAARU,MAAQ;;AAEjE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKpB,iBAAL;AAAyB;AACvB,iCACKkB,KADL;AAEER,UAAAA,qBAAqB,EAAE;AAFzB;AAID;;AACD,SAAKT,sBAAL;AAA6B;AAC3B,iCACKiB,KADL;AAEER,UAAAA,qBAAqB,EAAE,KAFzB;AAGEG,UAAAA,aAAa,EAACM,MAAM,CAACE,IAHvB;AAIEL,UAAAA,IAAI,EAACG,MAAM,CAACH;AAJd;AAMD;;AACD,SAAKd,qBAAL;AAA4B;AAC1B,iCACKgB,KADL;AAEER,UAAAA,qBAAqB,EAAE;AAFzB;AAID;;AACD,SAAKJ,qBAAL;AAA6B;AAC3B,iCACKY,KADL;AAEEP,UAAAA,wBAAwB,EAAE;AAF5B;AAID;;AACD,SAAKJ,0BAAL;AAAiC;AAC/B,iCACKW,KADL;AAEEP,UAAAA,wBAAwB,EAAE,KAF5B;AAGEG,UAAAA,gBAAgB,EAACK,MAAM,CAACE,IAH1B;AAIEL,UAAAA,IAAI,EAACG,MAAM,CAACH;AAJd;AAMD;;AACD,SAAKR,yBAAL;AAAgC;AAC9B,iCACKU,KADL;AAEEP,UAAAA,wBAAwB,EAAE;AAF5B;AAID;;AACD,SAAKR,4BAAL;AAAoC;AAClC,iCACKe,KADL;AAEEN,UAAAA,0BAA0B,EAAE;AAF9B;AAID;;AACD,SAAKR,iCAAL;AAAwC;AACtC,iCACKc,KADL;AAEEN,UAAAA,0BAA0B,EAAE,KAF9B;AAGEG,UAAAA,kBAAkB,EAACI,MAAM,CAACE,IAH5B;AAIEL,UAAAA,IAAI,EAACG,MAAM,CAACH;AAJd;AAMD;;AACD,SAAKX,gCAAL;AAAuC;AACrC,iCACKa,KADL;AAEEN,UAAAA,0BAA0B,EAAE;AAF9B;AAID;;AACD;AACE,aAAOM,KAAP;AA9DJ;AAgED","sourcesContent":["import { DO_LOAD_DASHBOARD, LOAD_DASHBOARD_SUCCESS, LOAD_DASHBOARD_FAILED,\n  DO_LOAD_DATA_CHART_DASHBOARD, LOAD_DATA_CHART_DASHBOARD_SUCCESS, LOAD_DATA_CHART_DASHBOARD_FAILED,\n  DO_LOAD_ALL_DASHBOARD, LOAD_ALL_DASHBOARD_SUCCESS, LOAD_ALL_DASHBOARD_FAILED\n} from '../../config/constant';\n\nconst INITIAL_STATE = {\n  fetchingDataDashboard: false,\n  fetchingAllDataDashboard:false,\n  fetchingDataChartDashboard:false,\n  dataDashboard : [],\n  dataAllDashboard:[],\n  dataChartDashboard:null,\n  meta:null\n}\n\nexport default function dataReducer(state = INITIAL_STATE, action) {\n\n  switch(action.type) {\n    case DO_LOAD_DASHBOARD : {\n      return {\n        ...state,\n        fetchingDataDashboard: true\n      }\n    }\n    case LOAD_DASHBOARD_SUCCESS: {\n      return {\n        ...state,\n        fetchingDataDashboard: false,\n        dataDashboard:action.data,\n        meta:action.meta\n      }\n    }\n    case LOAD_DASHBOARD_FAILED: {\n      return {\n        ...state,\n        fetchingDataDashboard: false,\n      }\n    }\n    case DO_LOAD_ALL_DASHBOARD : {\n      return {\n        ...state,\n        fetchingAllDataDashboard: true\n      }\n    }\n    case LOAD_ALL_DASHBOARD_SUCCESS: {\n      return {\n        ...state,\n        fetchingAllDataDashboard: false,\n        dataAllDashboard:action.data,\n        meta:action.meta\n      }\n    }\n    case LOAD_ALL_DASHBOARD_FAILED: {\n      return {\n        ...state,\n        fetchingAllDataDashboard: false,\n      }\n    }\n    case DO_LOAD_DATA_CHART_DASHBOARD : {\n      return {\n        ...state,\n        fetchingDataChartDashboard: true\n      }\n    }\n    case LOAD_DATA_CHART_DASHBOARD_SUCCESS: {\n      return {\n        ...state,\n        fetchingDataChartDashboard: false,\n        dataChartDashboard:action.data,\n        meta:action.meta\n      }\n    }\n    case LOAD_DATA_CHART_DASHBOARD_FAILED: {\n      return {\n        ...state,\n        fetchingDataChartDashboard: false,\n      }\n    }\n    default: \n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}