{"ast":null,"code":"import { servicesCustomers } from '../../../services/webServices';\nimport { DO_LIST_CUSTOMERS, LIST_CUSTOMERS_SUCCESS, LIST_CUSTOMERS_FAILED, RESET_CUSTOMERS_SUCCESS, DO_LOAD_ALL_CUSTOMERS, LOAD_ALL_CUSTOMERS_SUCCESS, LOAD_ALL_CUSTOMERS_FAILED, GET_AGENT, GET_SUB_AGENT, DO_CREATE_AGENT, DO_CREATE_SUB_AGENT, LOAD_ALL_AGENT_SUCCESS, LOAD_ALL_AGENT_FAILED } from '../../../config/constant'; //CUSTOMER ACTION\n\nexport function customerAction(dispatch, params, token) {\n  dispatch(doListCustomers());\n  return servicesCustomers(params, token).then(function (res) {\n    dispatch(listCustomersSuccess(res.data, res.meta));\n  }).catch(function (err) {\n    return dispatch(listCustomersFailed(false));\n  });\n} //RESET LIST CUSTOMER\n\nexport function resetCustomersAction(dispatch) {\n  dispatch(resetCustomersSuccess());\n  console.log('RESET LIST CUSTOMER');\n}\n\nfunction doListCustomers() {\n  return {\n    type: DO_LIST_CUSTOMERS\n  };\n}\n\nfunction listCustomersSuccess(payload, meta) {\n  return {\n    type: LIST_CUSTOMERS_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction listCustomersFailed() {\n  return {\n    type: LIST_CUSTOMERS_FAILED\n  };\n}\n\nfunction resetCustomersSuccess(payload) {\n  return {\n    type: RESET_CUSTOMERS_SUCCESS,\n    data: payload\n  };\n} //CUSTOMERS ALL ACTION\n\n\nexport function loadAllCustomers(dispatch, params, token) {\n  dispatch(doloadAllCustomers());\n  return servicesCustomers(params, token).then(function (res) {\n    dispatch(loadAllCustomersSuccess(res.data, res.meta));\n  }).catch(function (err) {\n    return dispatch(loadAllCustomersFailed(false));\n  });\n}\n\nfunction doloadAllCustomers() {\n  return {\n    type: DO_LOAD_ALL_CUSTOMERS\n  };\n}\n\nfunction loadAllCustomersSuccess(payload, meta) {\n  return {\n    type: LOAD_ALL_CUSTOMERS_SUCCESS,\n    data: payload,\n    meta: meta\n  };\n}\n\nfunction loadAllCustomersFailed() {\n  return {\n    type: LOAD_ALL_CUSTOMERS_FAILED\n  };\n} //AGENT\n\n\nexport var actionGetAgent = function actionGetAgent(data) {\n  return {\n    type: DO_CREATE_AGENT,\n    data: data\n  };\n};\nexport var addContact = function addContact() {\n  return {\n    type: \"ADD_CONTACT\"\n  };\n};","map":{"version":3,"sources":["/Users/sai04/Documents/Source/cmsaeroaja/src/pages/user/traveler/Action.js"],"names":["servicesCustomers","DO_LIST_CUSTOMERS","LIST_CUSTOMERS_SUCCESS","LIST_CUSTOMERS_FAILED","RESET_CUSTOMERS_SUCCESS","DO_LOAD_ALL_CUSTOMERS","LOAD_ALL_CUSTOMERS_SUCCESS","LOAD_ALL_CUSTOMERS_FAILED","GET_AGENT","GET_SUB_AGENT","DO_CREATE_AGENT","DO_CREATE_SUB_AGENT","LOAD_ALL_AGENT_SUCCESS","LOAD_ALL_AGENT_FAILED","customerAction","dispatch","params","token","doListCustomers","then","res","listCustomersSuccess","data","meta","catch","err","listCustomersFailed","resetCustomersAction","resetCustomersSuccess","console","log","type","payload","loadAllCustomers","doloadAllCustomers","loadAllCustomersSuccess","loadAllCustomersFailed","actionGetAgent","addContact"],"mappings":"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","sourcesContent":["import { servicesCustomers } from '../../../services/webServices';\nimport { DO_LIST_CUSTOMERS, LIST_CUSTOMERS_SUCCESS, LIST_CUSTOMERS_FAILED, RESET_CUSTOMERS_SUCCESS, \n          DO_LOAD_ALL_CUSTOMERS, LOAD_ALL_CUSTOMERS_SUCCESS, LOAD_ALL_CUSTOMERS_FAILED,\n          GET_AGENT, GET_SUB_AGENT, DO_CREATE_AGENT, DO_CREATE_SUB_AGENT, LOAD_ALL_AGENT_SUCCESS, LOAD_ALL_AGENT_FAILED \n      } from '../../../config/constant'\n\n\n//CUSTOMER ACTION\nexport function customerAction(dispatch, params, token) {\n  dispatch(doListCustomers())\n  return servicesCustomers(params, token)\n  .then( res => {\n    dispatch(listCustomersSuccess(res.data, res.meta));\n  })\n  .catch(err => {\n    return dispatch(listCustomersFailed(false))\n  })\n}\n\n//RESET LIST CUSTOMER\nexport function resetCustomersAction(dispatch){\n  dispatch(resetCustomersSuccess());\n  console.log('RESET LIST CUSTOMER')\n}\n\nfunction doListCustomers() {\n  return {\n    type: DO_LIST_CUSTOMERS\n  }\n}\n\nfunction listCustomersSuccess(payload, meta) {\n  return {\n    type: LIST_CUSTOMERS_SUCCESS,\n    data: payload,\n    meta: meta\n  }\n}\n\nfunction listCustomersFailed() {\n  return {\n    type: LIST_CUSTOMERS_FAILED\n  }\n}\n\nfunction resetCustomersSuccess(payload) {\n  return {\n    type: RESET_CUSTOMERS_SUCCESS,\n    data: payload\n  }\n}\n\n//CUSTOMERS ALL ACTION\nexport function loadAllCustomers(dispatch, params, token) {\n  dispatch(doloadAllCustomers())\n  return servicesCustomers(params, token)\n  .then( res => {\n    dispatch(loadAllCustomersSuccess(res.data, res.meta))\n  })\n  .catch(err => {\n    return dispatch(loadAllCustomersFailed(false))\n  })\n}\n\nfunction doloadAllCustomers() {\n  return {\n    type: DO_LOAD_ALL_CUSTOMERS\n  }\n}\n\nfunction loadAllCustomersSuccess(payload, meta){\n  return {\n    type: LOAD_ALL_CUSTOMERS_SUCCESS,\n    data: payload,\n    meta: meta\n  }\n}\n\nfunction loadAllCustomersFailed() {\n  return {\n    type: LOAD_ALL_CUSTOMERS_FAILED\n  }\n}\n\n//AGENT\nexport const actionGetAgent = (data: any) => ({\n  type: DO_CREATE_AGENT,\n  data\n})\n\nexport const addContact =() => {\n  return {\n      type: \"ADD_CONTACT\",\n       \n  }\n}"]},"metadata":{},"sourceType":"module"}